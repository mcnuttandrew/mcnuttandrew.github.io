{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/components/Header.svelte","../node_modules/svelte/store/index.mjs","../node_modules/svelte/easing/index.mjs","../node_modules/svelte/motion/index.mjs","../src/components/MobileHeader.svelte","../node_modules/mdurl/lib/decode.mjs","../node_modules/mdurl/lib/encode.mjs","../node_modules/mdurl/lib/format.mjs","../node_modules/mdurl/lib/parse.mjs","../node_modules/entities/lib/esm/decode_codepoint.js","../node_modules/uc.micro/properties/Any/regex.mjs","../node_modules/uc.micro/categories/Cc/regex.mjs","../node_modules/uc.micro/categories/P/regex.mjs","../node_modules/uc.micro/categories/S/regex.mjs","../node_modules/uc.micro/categories/Z/regex.mjs","../node_modules/uc.micro/categories/Cf/regex.mjs","../node_modules/entities/lib/esm/generated/decode-data-html.js","../node_modules/entities/lib/esm/generated/decode-data-xml.js","../node_modules/entities/lib/esm/decode.js","../node_modules/markdown-it/lib/common/utils.mjs","../node_modules/markdown-it/lib/helpers/parse_link_label.mjs","../node_modules/markdown-it/lib/helpers/parse_link_destination.mjs","../node_modules/markdown-it/lib/helpers/parse_link_title.mjs","../node_modules/markdown-it/lib/renderer.mjs","../node_modules/markdown-it/lib/ruler.mjs","../node_modules/markdown-it/lib/token.mjs","../node_modules/markdown-it/lib/rules_core/state_core.mjs","../node_modules/markdown-it/lib/rules_core/normalize.mjs","../node_modules/markdown-it/lib/rules_core/linkify.mjs","../node_modules/markdown-it/lib/rules_core/replacements.mjs","../node_modules/markdown-it/lib/rules_core/smartquotes.mjs","../node_modules/markdown-it/lib/parser_core.mjs","../node_modules/markdown-it/lib/rules_core/block.mjs","../node_modules/markdown-it/lib/rules_core/inline.mjs","../node_modules/markdown-it/lib/rules_core/text_join.mjs","../node_modules/markdown-it/lib/rules_block/state_block.mjs","../node_modules/markdown-it/lib/rules_block/table.mjs","../node_modules/markdown-it/lib/rules_block/list.mjs","../node_modules/markdown-it/lib/common/html_re.mjs","../node_modules/markdown-it/lib/rules_block/html_block.mjs","../node_modules/markdown-it/lib/common/html_blocks.mjs","../node_modules/markdown-it/lib/parser_block.mjs","../node_modules/markdown-it/lib/rules_block/code.mjs","../node_modules/markdown-it/lib/rules_block/fence.mjs","../node_modules/markdown-it/lib/rules_block/blockquote.mjs","../node_modules/markdown-it/lib/rules_block/hr.mjs","../node_modules/markdown-it/lib/rules_block/reference.mjs","../node_modules/markdown-it/lib/rules_block/heading.mjs","../node_modules/markdown-it/lib/rules_block/lheading.mjs","../node_modules/markdown-it/lib/rules_block/paragraph.mjs","../node_modules/markdown-it/lib/rules_inline/state_inline.mjs","../node_modules/markdown-it/lib/rules_inline/text.mjs","../node_modules/markdown-it/lib/rules_inline/linkify.mjs","../node_modules/markdown-it/lib/rules_inline/escape.mjs","../node_modules/markdown-it/lib/rules_inline/strikethrough.mjs","../node_modules/markdown-it/lib/rules_inline/emphasis.mjs","../node_modules/markdown-it/lib/rules_inline/autolink.mjs","../node_modules/markdown-it/lib/rules_inline/entity.mjs","../node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs","../node_modules/markdown-it/lib/parser_inline.mjs","../node_modules/markdown-it/lib/rules_inline/newline.mjs","../node_modules/markdown-it/lib/rules_inline/backticks.mjs","../node_modules/markdown-it/lib/rules_inline/link.mjs","../node_modules/markdown-it/lib/rules_inline/image.mjs","../node_modules/markdown-it/lib/rules_inline/html_inline.mjs","../node_modules/markdown-it/lib/rules_inline/fragments_join.mjs","../node_modules/linkify-it/index.mjs","../node_modules/linkify-it/lib/re.mjs","../node_modules/punycode.js/punycode.es6.js","../node_modules/markdown-it/lib/index.mjs","../node_modules/markdown-it/lib/presets/default.mjs","../node_modules/markdown-it/lib/presets/zero.mjs","../node_modules/markdown-it/lib/presets/commonmark.mjs","../src/data/projects.ts","../src/constants.ts","../src/data/news.ts","../src/data/publications.ts","../src/data/zines.ts","../src/components/NewsItem.svelte","../node_modules/svelte/transition/index.mjs","../src/utils.ts","../src/components/Publication.svelte","../src/components/About.svelte","../src/components/Projects.svelte","../src/components/Publications.svelte","../src/components/Teaching.svelte","../src/components/ShowPage.svelte","../src/components/News.svelte","../src/components/Zines.svelte","../src/App.svelte","../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.32.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n  export let currentSection;\n</script>\n\n<div class=\"h-14 justify-around hidden md:flex items-center bg-gray-600\">\n  {#each ['about', 'publications', 'projects'] as section (section)}\n    <a href=\"/#/{section}\" class:font-bold={currentSection === section} class=\"pr-3 text-xl text-white\">\n      {section.toUpperCase()}\n    </a>\n  {/each}\n</div>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { writable } from '../store/index.mjs';\nimport { now, loop, assign } from '../internal/index.mjs';\nimport { linear } from '../easing/index.mjs';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value) {\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        }\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled) {\n                    task = null;\n                }\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","<script lang=\"ts\">\n  import {tweened} from 'svelte/motion';\n  import {cubicOut} from 'svelte/easing';\n\n  const rotation = tweened(0, {\n    duration: 400,\n    easing: cubicOut\n  });\n\n  export let currentSection;\n  let open = false;\n  function toggleHeader() {\n    open = !open;\n    rotation.set(!$rotation ? 90 : 0);\n  }\n  const externalLinks = [\n    {link: 'https://scholar.google.com/citations?user=AHwQg4kAAAAJ&hl=en', name: 'scholar'},\n    {link: 'https://github.com/mcnuttandrew', name: 'github'},\n    {link: 'https://vis.social/@mcnutt', name: 'mastodon'},\n    {link: 'https://www.mcnutt.in/assets/cv.pdf', name: 'cv', noImage: true}\n  ];\n</script>\n\n<div class=\"flex-col cursor-pointer px-3 z-10 flex md:hidden bg-white shadow-md\">\n  <div on:click={toggleHeader} class=\"flex h-16 justify-between w-full items-center\">\n    <h1 class=\"text-3xl\">Andrew McNutt</h1>\n    <div>\n      <!-- hamburger menu -->\n      <svg transform=\"rotate({$rotation})\" width=\"25px\" height=\"21px\">\n        <rect x=\"0\" y=\"0\" width=\"25\" height=\"3\" />\n        <rect x=\"0\" y=\"7\" width=\"25\" height=\"3\" />\n        <rect x=\"0\" y=\"14\" width=\"25\" height=\"3\" />\n      </svg>\n    </div>\n  </div>\n  {#if open}\n    <div class=\"flex-col flex mb-3\">\n      {#each ['about', 'publications', 'projects'] as section (section)}\n        <a\n          href=\"/#/{section}\"\n          class:font-bold={currentSection === section}\n          class=\"padding text-3xl no-underline\"\n          on:click={toggleHeader}\n        >\n          {section.toUpperCase()}\n        </a>\n      {/each}\n      {#each externalLinks as x}\n        <a\n          href={x.link}\n          class:font-bold={currentSection === x.name}\n          class=\"padding externalLink text-3xl no-underline flex\"\n        >\n          {x.name.toUpperCase()}\n          {#if !x.noImage}\n            <img src=\"icons/{x.name}.svg\" alt=\"link to {x.name} account\" class=\"ml-2 w-7\" />\n          {/if}\n        </a>\n      {/each}\n    </div>\n  {/if}\n</div>\n","/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n","const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n","export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","export default /[\\0-\\x1F\\x7F-\\x9F]/","export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/","export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n","// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n","// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n","// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n","// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n","// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n","// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* ’ */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n","export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n","export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n","// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n","// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n","// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n","// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n","// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n","// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n","// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n","import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n","// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n","// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n","// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n","// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n","// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n","// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n","// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n","// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n","// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n","// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n","import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n","import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n","// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","export const PROJECTS = [\n    {\n        title: 'Prong Editor',\n        dates: 'September 2021 - ',\n        sourceLink: 'https://github.com/mcnuttandrew/prong',\n        link: 'http://prong-editor.netlify.app/',\n        imgLink: 'converted-images/prong-logo.jpg',\n        text: 'A projectional editor for JSON-based DSLs',\n        tags: ['visualization', 'tech']\n    },\n    {\n        title: 'Zines',\n        dates: 'May 2019 - ',\n        sourceLink: 'https://www.mcnutt.in/#/zines',\n        link: 'https://www.mcnutt.in/#/zines',\n        imgLink: 'converted-images/bison-eylsium-cover.jpg',\n        text: 'Zines are cool and I make them for various reasons',\n        tags: ['art', 'tech', 'visualization']\n    },\n    {\n        title: 'Ivy',\n        dates: 'November 2019 - August 2020',\n        sourceLink: 'https://github.com/mcnuttandrew/ivy',\n        link: 'http://ivy-vis.netlify.app/',\n        imgLink: 'converted-images/ivy.jpg',\n        text: \"A meta-level approach to visual analytics. Information is Beautiful Awards '22 Long List.\",\n        tags: ['visualization', 'tech']\n    },\n    {\n        title: 'table-cartogram.ts',\n        dates: 'September 2020',\n        sourceLink: 'https://github.com/mcnuttandrew/table-cartogram',\n        link: 'https://www.mcnutt.in/table-cartogram/',\n        imgLink: 'converted-images/taco-ts.jpg',\n        text: 'A library for constructing table cartograms in the browser.',\n        tags: ['visualization', 'tech']\n    },\n    {\n        title: 'Sortilège',\n        dates: 'January 2020',\n        sourceLink: 'https://github.com/vis-tarot/vis-tarot',\n        link: 'https://vis-tarot.github.io/vis-tarot/',\n        imgLink: 'converted-images/vis-tarot-back.jpg',\n        text: 'A tarot based visual analytics system. It guides users analytics process via the divine hands of fate.',\n        tags: ['visualization']\n    },\n    {\n        title: 'Data is Plural Search',\n        dates: 'May 2020',\n        sourceLink: 'https://github.com/mcnuttandrew/data-is-plural-search',\n        link: 'https://data-is-plural-search.netlify.app/',\n        imgLink: 'converted-images/data-is-plural.jpg',\n        text: 'A simple web view for the data is plural news letter by Singer-Vine.',\n        tags: ['tech']\n    },\n    {\n        title: 'Cycles & Rain / Seasons In Size',\n        dates: 'July 2019',\n        sourceLink: 'https://github.com/mcnuttandrew/cycles-rain-seasons-in-size/',\n        link: 'https://www.mcnutt.in/cycles-rain-seasons-in-size/',\n        imgLink: 'converted-images/cycles-in-rain.jpg',\n        text: \"A little infographic about bicycle ridership in Seattle featuring table cartograms. Information is Beautiful Awards '19 Long List.\",\n        tags: ['visualization', 'art']\n    },\n    {\n        title: 'CSSQL',\n        dates: 'May 2019',\n        sourceLink: 'https://github.com/mcnuttandrew/cssql',\n        link: 'https://www.npmjs.com/package/node-cssql',\n        imgLink: 'converted-images/cssql-logo.jpg',\n        text: 'A new answer to this css-in-js question: css in sql. A sql-ddl to css transpiler written in haskell, available on npm.',\n        tags: ['tech']\n    },\n    {\n        title: 'Forum Explorer',\n        dates: 'April 2019',\n        sourceLink: 'https://github.com/mcnuttandrew/forum-explorer',\n        link: 'https://www.mcnutt.in/forum-explorer/',\n        imgLink: 'converted-images/forum-ex-pic.jpg',\n        text: \"A chrome extension and website that allows users to explore threaded conversations using trees.  Information is Beautiful Awards '19 Long List.\",\n        tags: ['visualization', 'tech']\n    },\n    {\n        title: 'tap-react-browser',\n        dates: 'February - April 2018',\n        link: 'https://github.com/mcnuttandrew/tap-react-browser/',\n        sourceLink: 'https://github.com/mcnuttandrew/tap-react-browser/',\n        imgLink: 'converted-images/tap-react-browser.jpg',\n        text: `A lightweight wrapper on tape that spits out react components.`,\n        tags: ['tech']\n    },\n    {\n        title: 'Constellations of Home - XMAS CARDS 2017',\n        dates: 'December 2017',\n        link: 'http://www.mcnutt.in/home-graphs/',\n        sourceLink: 'https://github.com/mcnuttandrew/home-graphs',\n        imgLink: 'converted-images/home-graphs.jpg',\n        text: `Over the 2017 holidays I spent some time meditating on memory, home, and\n    graph theory, which led to my making these christmas cards.`,\n        tags: ['visualization', 'art']\n    },\n    {\n        title: 'On The Shape of American Cities I/II',\n        dates: 'July 2017',\n        link: 'http://www.mcnutt.in/city-size/',\n        sourceLink: 'https://github.com/mcnuttandrew/city-size',\n        imgLink: 'converted-images/city-size.jpg',\n        text: 'A print graphic describing the shape of the 100 most populous American cities.',\n        tags: ['visualization', 'art']\n    },\n    {\n        title: 'Pantone: Color of the year',\n        dates: 'Updated yearly, starting 2016-2020',\n        link: 'http://www.mcnutt.in/color-of-the-year/',\n        sourceLink: 'https://github.com/mcnuttandrew/color-of-the-year',\n        imgLink: 'converted-images/color-of-year.jpg',\n        text: `A small exploration of the glory and wonder that is Pantone's color of the year.`,\n        tags: ['visualization']\n    },\n    {\n        title: 'react-vis',\n        dates: '2016 - 2019',\n        link: 'http://uber.github.io/react-vis/#/',\n        sourceLink: 'https://github.com/uber/react-vis',\n        imgLink: 'converted-images/react-vis-image.jpg',\n        text: 'A charting library for the react ecosystem.',\n        tags: ['visualization', 'tech']\n    },\n    {\n        title: 'Unnamed Tarot Deck',\n        dates: 'Dec 2015 - June 2016',\n        link: 'https://medium.com/@mcnutt/a-brief-saga-concerning-the-making-of-a-tarot-deck-about-the-american-highway-system-2eaebf3320c8',\n        sourceLink: 'https://github.com/mcnuttandrew/tarot-deck',\n        imgLink: 'converted-images/tarot-image.jpg',\n        text: 'A tarot tech themed around the signage and spirit of the American highway system.',\n        tags: ['art']\n    }\n];\n","import { PROJECTS as projectsImport } from './data/projects';\nimport { NEWS as newsImport } from './data/news';\nimport { PUBLICATIONS as pubsImport } from './data/publications';\nimport zineImport from './data/zines';\nexport const NEWS = newsImport;\nexport const PROJECTS = projectsImport;\nexport const PUBLICATIONS = pubsImport;\nexport const ZINES = zineImport;\n/* eslint-disable max-len */\nexport const COLLABORATOR_LINKS = {\n    'Aaron Elmore': 'http://people.cs.uchicago.edu/~aelmore/',\n    'Agatha Seo-Hyun Kim': 'https://history.uchicago.edu/directory/agatha-kim',\n    'Alex M. Clark': 'https://scholar.google.com/citations?user=4Gv4PboAAAAJ&hl=en',\n    'Allison Morgan': 'https://allisonmorgan.github.io/',\n    'Anamaria Crisan': 'https://amcrisan.github.io/',\n    'Anton Outkine': 'https://antonoutkine.com/',\n    'Blase Ur': 'https://www.blaseur.com/',\n    'Chenglong Wang': 'https://chenglongwang.org/',\n    'Chenhao Tan': 'https://chenhaot.com/',\n    'Elsie Lee-Robbins': 'https://elsiejlee.com/',\n    'Gordon Kindlmann': 'http://people.cs.uchicago.edu/~glk/',\n    'Jane L. Adams': 'http://universalities.com/',\n    'Jeffrey Heer': 'https://homes.cs.washington.edu/~jheer/',\n    'Joel Franklin': 'http://people.reed.edu/~jfrankli/',\n    'Ken Gu': 'https://kenqgu.com/',\n    'Kevin Bryson': 'https://cmdkev.github.io/about/',\n    'Krishna Dole': 'https://scholar.google.com/citations?user=J4TpF1YAAAAJ&hl=en',\n    'Kyle Chard': 'https://kylechard.com/',\n    'Madeleine Grunde-McLaughlin': 'https://madeleinegrunde.github.io/',\n    'Matthias Miller': 'https://www.vis.uni-konstanz.de/mitglieder/miller/',\n    'Mennatallah El-Assady': 'https://el-assady.com/',\n    'Michael Correll': 'https://correll.io/',\n    'Michael J. McGuffin': 'https://www.michaelmcguffin.com/',\n    'Michael Littman': 'https://www.littmania.com/',\n    'Nelia Mann': 'https://www.union.edu/physics-and-astronomy/faculty-staff/nelia-mann',\n    'Nicolas Kruchten': 'http://nicolas.kruchten.com/',\n    'Ravi Chugh': 'http://people.cs.uchicago.edu/~rchugh/',\n    'Rob DeLine': 'https://www.microsoft.com/en-us/research/people/rdeline/',\n    'Sara Di Bartolomeo': 'https://picorana.github.io/',\n    'Sean Ekins': 'https://scholar.google.com/citations?user=6NNfXAMAAAAJ&hl=en',\n    'Steven M. Drucker': 'https://stevenmdrucker.github.io/#/',\n    'Tim Althoff': 'https://homes.cs.washington.edu/~althoff/',\n    'Varchas Gopalaswamy': 'https://scholar.google.com/citations?user=PxH1Z7kAAAAJ&hl=en',\n    'Victor Schetinger': 'https://www.cvast.tuwien.ac.at/team/victor-schetinger',\n    'Will Brackenbury': 'https://wbrackenbury.github.io/',\n    'Yuxin Chen': 'https://yuxinchen.org/'\n};\nconst selectedPubs = new Set(['tacos', 'mirage', 'sauce', 'ai-4-notebooks']);\nexport const SELECTED_PUBLICATIONS = PUBLICATIONS.filter((x) => selectedPubs.has(x.urlTitle));\nexport const PRESENTATIONS = [\n    {\n        title: 'Safer Interfaces for Data Visualization',\n        details: ['VL/HCC, October, 2023, Washington, D.C.', 'Vega Conf, September, 2023, Seattle, Washington'],\n        links: []\n    },\n    {\n        title: 'Safer Interfaces for Data Visualization',\n        details: [\n            'University of California Berkeley, May, 2023, Berkeley, California',\n            'Microsoft Research, April, 2023, Cambridge, England (Virtual)',\n            'Roux Institute, March, 2023, Portland, Maine',\n            'University of Utah, February, 2023, Salt Lake City, Utah'\n        ],\n        links: []\n    },\n    {\n        title: 'A Study of Editor Features in a Creative Coding Classroom',\n        details: ['SIGCHI, April, 2023, Hamburg, Germany'],\n        links: []\n    },\n    {\n        title: 'On the Design of AI-powered Code Assistants for Notebooks',\n        details: ['SIGCHI, April, 2023, Hamburg, Germany'],\n        links: []\n    },\n    {\n        title: 'Understanding and Enhancing JSON-based DSL Interfaces for Visualization',\n        details: [\n            'Shandong University, November 15, 2022, Qingdao, China. (Virtual)',\n            'IEEE VIS Doctoral Colloquium, October 15, 2022, Oklahoma City, Oklahoma. '\n        ],\n        links: []\n    },\n    {\n        title: 'No Grammar to Rule Them All: A Survey of JSON-Style DSLs for Visualization',\n        details: [\n            'IEEEVIS, October 19, 2022, Oklahoma City, Oklahoma.',\n            ' Microsoft Research, July 14, 2022, Redmond, Washington. (Virtual)'\n        ],\n        links: []\n    },\n    {\n        title: 'On The Potential of Zines as a Medium for Visualization',\n        details: ['IEEEVIS, October 27, 2021, New Orleans, Louisiana. (Virtual)'],\n        links: []\n    },\n    {\n        title: 'Visualization for Villainy',\n        details: ['alt.vis, October 24, 2021, New Orleans, Louisiana. (Virtual)'],\n        links: []\n    },\n    {\n        title: 'How do we know what a visualization is good for? Algebraic Approaches',\n        details: [\n            '[RAMPVIS](https://sites.google.com/view/rampvis/events?authuser=0), August 5, 2021, Oxford, England. (Virtual)'\n        ],\n        links: [\n            {\n                name: 'slides',\n                link: '(https://drive.google.com/file/d/1o9-7cBnQXfO8VTMS9V7MZ_5odwYVUkYw/view?usp=sharing'\n            }\n        ]\n    },\n    {\n        title: 'What are Table Cartograms Good for Anyway? An Algebraic Analysis',\n        details: [\n            'EuroVis, June 15, 2021, Zurich, Switzerland. (Virtual)',\n            'City University London, May 18, 2021, London, England. (Virtual)'\n        ],\n        links: []\n    },\n    {\n        title: 'Integrated Visualization Editing via Parameterized Declarative Templates',\n        details: [\n            'SIGCHI, May 12-13, 2021, Yokohama, Japan (Virtual)',\n            'CHIcago Symposium, May 5, 2021, Chicago, Illinois (Virtual)'\n        ],\n        links: []\n    },\n    {\n        title: 'Supporting Expert Close Analysis of Historical Scientific Writings: A Case Study for Near-by Reading',\n        details: ['VIS4DH, October 25, 2020, Salt Lake City, Utah (Virtual)'],\n        links: []\n    },\n    {\n        title: 'Surfacing Visualization Mirages',\n        details: ['CHIcago Symposium, May 26, 2020, Chicago, IL (Virtual)'],\n        links: []\n    },\n    {\n        title: 'Divining Insights: Visual Analytics Through Cartomancy',\n        details: ['CHIcago Symposium, May 26, 2020, Chicago, IL (Virtual)'],\n        links: []\n    },\n    {\n        title: 'Linting for Visualization: Towards a Practical Automated Visualization Guidance System',\n        details: ['VIS Guides, October 22, 2018, Berlin, Germany'],\n        links: []\n    },\n    {\n        title: 'Design and Analysis of Table Cartograms: Simultaneous-Multipurpose Tabular Area-Encoding Displays',\n        details: ['University of Chicago, June 12, 2019, Chicago, Illinois'],\n        links: []\n    },\n    // {\n    //   title:\n    //     'Linting for Visualization: Towards a Practical Automated Visualization Guidance System',\n    //   link: 'assets/vis-lint-talk.pdf',\n    //   journal: 'VisGuides 2018. October 22, 2018'\n    // },\n    {\n        // imgLink: 'converted-images/design-patterns-pic.jpg',\n        title: 'Design Patterns For Data Visualization in React',\n        // link: 'http://tinyurl.com/reactvisdesignpatterns',\n        details: ['React Chicago. August 29, 2018'],\n        // subtitle: 'An overview of four useful patterns for developing visualizations in react',\n        links: [{ name: 'slides', link: 'http://tinyurl.com/reactvisdesignpatterns' }]\n    }\n    // {\n    //   link: 'assets/nlm-talk.pdf',\n    //   title: 'Nonequivalent Lagrangian Mechanics',\n    //   journal: 'Reed Physics Seminar. April 8, 2014'\n    // },\n];\nexport const BLOG_POSTS = [\n    {\n        imgLink: 'converted-images/tarot-image.jpg',\n        title: 'A Brief Saga Concerning the Making of a Tarot Deck About the American Highway System',\n        subtitle: 'A little essay about making',\n        date: 'Personal Blog. December 10, 2018',\n        link: 'https://medium.com/@mcnutt/a-brief-saga-concerning-the-making-of-a-tarot-deck-about-the-american-highway-system-2eaebf3320c8',\n        links: [\n            {\n                name: 'blog post',\n                link: 'https://medium.com/@mcnutt/a-brief-saga-concerning-the-making-of-a-tarot-deck-about-the-american-highway-system-2eaebf3320c8'\n            },\n            { name: 'github', link: 'https://github.com/mcnuttandrew/tarot-deck' }\n        ]\n    },\n    {\n        imgLink: 'converted-images/advanced-react-vis-pic.jpg',\n        title: 'Advanced Visualization with react-vis',\n        subtitle: 'Using Voronois, single pass rendering, and canvas components for amazing user experiences',\n        date: 'Towards Data Science. May 21, 2018',\n        link: 'https://towardsdatascience.com/advanced-visualization-with-react-vis-efc5c6667b4',\n        links: [\n            {\n                name: 'blog post',\n                link: 'https://towardsdatascience.com/advanced-visualization-with-react-vis-efc5c6667b4'\n            },\n            // {name: 'talk', link: 'http://tinyurl.com/reactvisdesignpatterns'},\n            { name: 'code', link: 'https://github.com/mcnuttandrew/advanced-react-vis-tutorial' }\n        ]\n    }\n];\nexport const AWARDS = [\n    {\n        society: 'IEEE VIS',\n        date: '2023',\n        awardName: 'Special Recognition for Outstanding Review'\n    },\n    {\n        society: 'ACM SIGCHI',\n        date: '2023',\n        awardName: 'Special Recognition for Outstanding Review x3'\n    },\n    {\n        society: 'Siebel',\n        date: '2023',\n        awardName: 'Siebel Scholars Class of 2023'\n    },\n    {\n        society: 'ACM SIGCHI',\n        date: '2022',\n        awardName: 'Special Recognition for Outstanding Review x2'\n    },\n    {\n        society: 'ACM UIST',\n        date: '2021',\n        awardName: 'Special Recognition for Outstanding Review'\n    },\n    {\n        society: 'UChicago Grad',\n        date: 'October 2021',\n        awardName: 'Graduate Council Research Fund'\n    },\n    {\n        society: 'Eurographics Working Group on Data Visualization',\n        date: '2021',\n        awardName: 'Honorable Mention for Best Paper',\n        detail: '(single juried selection) for What are Table Cartograms Good for Anyway? An Algebraic Analysis'\n    },\n    {\n        society: 'ACM SIGCHI',\n        date: '2021',\n        awardName: 'Special Recognition for Outstanding Review'\n    },\n    {\n        society: 'IEEE VIS',\n        date: 'October 2020',\n        awardName: 'InfoVis Honorable Mention Poster Research',\n        detail: 'for A Minimally Constrained Optimization Algorithm for Table Cartograms'\n    },\n    {\n        society: 'ACM SIGCHI',\n        date: 'March 2020',\n        awardName: 'Best Paper Honorable Mention',\n        detail: '(Top 5\\\\%) for Surfacing Visualization Mirages'\n    },\n    {\n        society: 'MindBytes Research Symposium',\n        date: 'October 2019',\n        awardName: 'Best Poster in Visualization'\n    },\n    {\n        society: 'UChicago Grad',\n        date: 'October 2019',\n        awardName: 'Graduate Council Travel Fund'\n    },\n    {\n        society: 'Information is Beautiful Awards',\n        date: 'September 2019',\n        awardName: 'Long List for Visual Analytics and Unusual Categories',\n        detail: \"for 'FeX': Forum Explorer and Cycles Rain Seasons in Size\"\n    },\n    {\n        society: 'University of Chicago, Department of Computer Science',\n        date: 'June 2019',\n        awardName: 'Teaching Assistant Prize'\n    },\n    {\n        society: 'UChicago Physical Sciences Division ',\n        date: 'May 2018, May 2019',\n        awardName: 'Divisional Teaching Award Nominee'\n    },\n    {\n        society: 'UChicago Art and Science Expo',\n        date: 'May 2019',\n        awardName: '2nd Place for Best in Show'\n    },\n    {\n        society: 'Reed College',\n        date: 'May 2014',\n        awardName: 'Commendation of Academic Excellence',\n        detail: 'Merit given to students exhibiting exemplary scholarship'\n    }\n];\nexport const TEACHING = [\n    {\n        title: 'CAPP 30239 - Data Visualization For Public Policy',\n        date: 'Winter 2021',\n        role: 'Instructor',\n        location: 'UChicago',\n        link: 'https://capp-30239-winter-2021.netlify.com/'\n    },\n    {\n        title: 'DATA 22700 - Data Visualization and Communication',\n        date: 'Spring 2023',\n        role: 'Teaching Assistant',\n        location: 'UChicago',\n        link: 'https://github.com/kalealex/data227-sp23'\n    },\n    {\n        title: 'CMSC 11111 - Creative Coding',\n        date: 'Winter 2022',\n        role: 'Teaching Assistant',\n        location: 'UChicago',\n        link: 'https://www.classes.cs.uchicago.edu/archive/2022/winter/11111-1/'\n    },\n    {\n        title: 'Art with Science: Creative Coding',\n        date: 'Summer 2021',\n        role: 'Teaching Assistant',\n        location: 'Collegiate Scholars Program (Highschool students)',\n        link: 'https://www.classes.cs.uchicago.edu/archive/2021/summer/creative-coding/csp/'\n    },\n    {\n        title: 'Introduction to Creative Coding',\n        date: 'Summer 2021',\n        role: 'Teaching Assistant',\n        location: 'UChicago (Highschool students)',\n        link: 'https://www.classes.cs.uchicago.edu/archive/2021/summer/creative-coding/immersion/'\n    },\n    {\n        title: 'CMSC 11111 - Creative Coding',\n        date: 'Spring 2021',\n        role: 'Teaching Assistant',\n        location: 'UChicago',\n        link: 'https://www.classes.cs.uchicago.edu/archive/2021/spring/11111-1/'\n    },\n    {\n        title: 'CMSC 23900 - Data Visualization',\n        date: 'Spring 2020',\n        role: 'Instructor',\n        location: 'UChicago'\n    },\n    {\n        title: 'CAPP 30239 - Data Visualization For Public Policy',\n        date: 'Winter 2020',\n        role: 'Instructor',\n        location: 'UChicago',\n        link: 'https://capp-30239-winter-2020.netlify.com/'\n    },\n    // {\n    //   title: 'Visualization Research Reading Group',\n    //   date: 'February 2019-Present',\n    //   role: 'Other',\n    //   location: 'UChicago',\n    //   fancyTitle: 'Director',\n    //   link: 'https://uchicago-vis-pl-lab.github.io/vis-reading-group/'\n    // },\n    {\n        title: 'CMSC 23900 - Data Visualization',\n        date: 'Spring 2019',\n        role: 'Teaching Assistant',\n        location: 'UChicago',\n        link: 'http://people.cs.uchicago.edu/~glk/class/datavis19/'\n    },\n    {\n        title: 'CAPP 30239 - Data Visualization For Public Policy',\n        date: 'Winter 2019',\n        role: 'Teaching Assistant',\n        location: 'UChicago',\n        link: 'https://twitter.com/AlexCEngler/status/1101245224733605891?s=20'\n    },\n    {\n        title: 'CAPP 30121 - Computer Science with Applications 1',\n        date: 'Fall 2018',\n        role: 'Teaching Assistant',\n        location: 'UChicago',\n        link: 'https://classes.cs.uchicago.edu/archive/2018/fall/30121-1/'\n    },\n    {\n        title: 'CMSC 23900 - Data Visualization',\n        date: 'Spring 2018',\n        role: 'Teaching Assistant',\n        location: 'UChicago',\n        link: 'http://people.cs.uchicago.edu/~glk/class/datavis18/'\n    },\n    {\n        title: 'CMSC 15100 - Introduction to Computer Science 1',\n        date: 'Winter 2018',\n        role: 'Teaching Assistant',\n        location: 'UChicago',\n        link: 'https://www.classes.cs.uchicago.edu/archive/2018/winter/15100-1/syllabus.html'\n    },\n    {\n        title: 'CMSC 12100 - Computer Science with Applications 1',\n        date: 'Fall 2017',\n        role: 'Teaching Assistant',\n        location: 'UChicago',\n        link: 'https://www.classes.cs.uchicago.edu/archive/2017/fall/12100-1/'\n    },\n    {\n        title: 'Uberversity Speaker',\n        date: '2016-2017',\n        role: 'Instructor',\n        fancyTitle: 'Lecturer',\n        location: 'Uber'\n    },\n    {\n        title: 'Visualization Eng-ucation',\n        date: '2015-2017',\n        role: 'Instructor',\n        fancyTitle: 'Lecturer',\n        location: 'Uber'\n    },\n    {\n        title: 'Physics 101 - General Physics I',\n        date: '2012',\n        role: 'Teaching Assistant',\n        location: 'Reed College'\n    },\n    {\n        title: 'F.L. Griffin Math-fest',\n        date: '2014',\n        role: 'Teaching Assistant',\n        location: 'Reed College'\n    }\n];\nexport const SERVICE = [\n    {\n        organization: 'Information+ Conference',\n        date: '2023',\n        role: 'Organizing Committee',\n        link: 'https://informationplusconference.com/2023/'\n    },\n    {\n        organization: 'alt.vis',\n        date: '2023',\n        role: 'Organizing Committee',\n        link: 'https://altvis.github.io/'\n    },\n    {\n        organization: 'alt.vis',\n        date: '2022',\n        role: 'Organizing Committee',\n        link: 'https://altvis.github.io/'\n    },\n    {\n        organization: 'VisGuides',\n        date: '2022',\n        role: 'Program Committee',\n        link: 'https://visguides-workshop.github.io/'\n    },\n    {\n        organization: 'EuroVis',\n        date: '2021',\n        role: 'Student Volunteer'\n    },\n    {\n        organization: 'Chicago Public Schools CSEd Week',\n        date: '2020',\n        role: 'Speaker'\n    },\n    {\n        organization: 'Open Access VIS  / EuroVIS',\n        date: '2019',\n        role: 'Contributor / Organizer',\n        link: 'http://oavis.org/'\n    },\n    {\n        organization: 'South Side Civic',\n        date: '2019',\n        role: 'Scope-athon Facilitator'\n    },\n    {\n        organization: 'UChicago Visualization Research Reading Group',\n        date: 'February 2019-Match 2021',\n        role: 'Organizer',\n        link: 'https://uchicago-vis-pl-lab.github.io/vis-reading-group/'\n    },\n    {\n        organization: 'UChicago CS Graduate Student Ministry',\n        date: '2018',\n        role: 'Facilitator of CS Grad Weekly Coffee Break'\n    },\n    {\n        organization: 'F.L. Griffin Math-fest',\n        date: 'Spring 2014',\n        role: 'Teaching Assistant'\n    }\n];\n","export const NEWS = [\n    {\n        date: 'April 2024',\n        content: \"Excited to be co-organizing [VISions of the Future](https://visionsofthefuture.github.io/') an VIS24 workshop on cultural📈 and environmental🌴 sustainability. \"\n    },\n    {\n        date: 'September 2023',\n        content: \"Started my PostDoc at University of Washington's [Interactive Data Lab](https://idl.cs.washington.edu/) with [Leilani Battle](https://homes.cs.washington.edu/~leibatt/bio.html) and [Jeffrey Heer](https://homes.cs.washington.edu/~jheer/).\"\n    },\n    {\n        date: 'August 2023',\n        content: 'Our full paper on [evaluating visualization notations](https://arxiv.org/pdf/2308.16353.pdf) 📊 will be presented at VIS 2023! Also excited that [our reflection](https://arxiv.org/abs/2308.15429) on the 🌲🌲🌲environmental sustainability🌲🌲🌲 of IEEE VIS will be presented at alt.vis 2023!!'\n    },\n    {\n        date: 'June 2023',\n        content: 'I got my Ph.D.!! Thanks to my committee, mentors, friends, family, and everyone else who supported me through it.'\n    },\n    {\n        date: 'April 2023',\n        content: '[Our paper](https://osf.io/3jrcm/) on generative AI methods was accepted to EuroVIS23! '\n    },\n    {\n        date: 'March 2023',\n        content: 'At long last I have been awarded the College Teaching Certificate from the University of Chicago Center for Teaching.'\n    },\n    {\n        date: 'January 2023',\n        content: 'Thrilled to have two (first-author) papers accepted to CHI 2023!! One came from my internship with [MSR last summer](https://arxiv.org/abs/2301.11178), while the other is the culmination of a years long work on [looking at creative coding editors](https://people.cs.uchicago.edu/~rchugh/classes/creative-coding/).'\n    },\n    {\n        date: 'September 2022',\n        content: 'Honored to be named to [Siebel Scholars](https://cs.uchicago.edu/news/five-uchicago-cs-students-named-to-siebel-scholars-2023-class/) class of 2023!'\n    },\n    {\n        date: 'July 2022',\n        content: '[Our paper](https://link.springer.com/article/10.1007/s12064-022-00376-8) on the role of nationalism in 🔬science🔬 in 19th century France was (at long last) published Theory in Biosciences!!'\n    },\n    {\n        date: 'July 2022',\n        content: '[My paper](https://arxiv.org/pdf/2207.07998.pdf) exploring the terrain of JSON-style DSLs for visualization was accepted to VIS22.'\n    },\n    {\n        date: 'May 2022',\n        content: 'Started a (remote) internship at Microsoft Research with Chenglong Wang and Rob DeLine.'\n    },\n    {\n        date: 'April 2022',\n        content: 'Our paper ([Explaining Why](https://www.blaseur.com/papers/rationales-naacl22.pdf)) on interfaces for providing annotator rationales was accepted to NAACL 2022!'\n    },\n    {\n        date: 'March 2022',\n        content: 'Quite excited to be serving on the organizing committee for [alt.vis](https://altvis.github.io/) this year!'\n    },\n    {\n        date: 'February 2022',\n        content: 'Delighted to now be a PhD Candidate! Tremendous thanks to my committee Ravi Chugh, Blase Ur, and Arvind Satyanarayan.'\n    },\n    {\n        date: 'October 2021',\n        content: 'Excited that [our paper](https://arxiv.org/abs/2109.06007) describing the design space of visualization applications for villains was accepted to [alt.vis 21](https://altvis.github.io/).'\n    },\n    {\n        date: 'August 2021',\n        content: 'Thanks to [RAMPVIS](https://sites.google.com/view/rampvis/events?authuser=0) for hosting me! I had a great time talking with them about all things algebraic analysis. [Check out the slides](https://drive.google.com/file/d/1o9-7cBnQXfO8VTMS9V7MZ_5odwYVUkYw/view?usp=sharing)'\n    },\n    {\n        date: 'August 2021',\n        content: 'My paper [\"On The Potential of Zines as Medium for Visualization\"](https://www.mcnutt.in/zine-potential) was accepted to the VIS21 short papers track! (The paper includes a zine about the paper)'\n    },\n    {\n        date: 'July 2021',\n        content: 'Our paper on [KondoCloud](https://dl.acm.org/doi/10.1145/3472749.3474736), a system that asks users if files in their cloud-based drives spark joy, was accepted to UIST21!'\n    },\n    {\n        date: 'June 2021',\n        content: 'My paper on [table cartograms and algebraic visualization](https://www.mcnutt.in/#/research/tacos) won the honorable mention🏆 for best paper at EuroVis!'\n    },\n    {\n        date: 'March 2021',\n        content: 'My paper [\"What are Table Cartograms Good for Anyway? An Algebraic Analysis\"](https://www.mcnutt.in/#/research/tacos) was accepted to EuroVIS 2021! 🌮🌮🌮🌮'\n    },\n    {\n        date: 'January 2021',\n        content: 'Our paper 🌱[\"Integrated Visualization Editing via Parameterized Declarative Templates\"](https://www.mcnutt.in/#/research/ivy) was accepted to CHI 2021.'\n    },\n    {\n        date: 'October 2020',\n        content: '[\"A Minimally Constrained Optimization Algorithm for Table Cartograms\"](https://osf.io/kem6j/) won an honorable mention🏆 in the IEEEVIS InfoVis poster track.'\n    },\n    {\n        date: 'September 2020',\n        content: 'Our paper [\"Supporting Expert Close Analysis of Historical Scientific Writings: A Case Study for Near-by Reading\"](https://arxiv.org/pdf/2009.02384.pdf) on mixing close and distant reading for 19th century scientific writing was accepted to [VIS4DH20](http://www.vis4dh.org/).'\n    },\n    {\n        date: 'March 2020',\n        content: 'Our paper [\"Surfacing Visualization Mirages\"](https://www.mcnutt.in/#/research/mirage) won a best paper honorable mention🏆 at CHI2020!!'\n    },\n    {\n        date: 'February 2020',\n        content: 'Our paper on using tarot for visual analytics [\"Divining Insights: Visual Analytics Through Cartomancy\"](https://www.mcnutt.in/#/research/tarot) was accepted to alt.chi 2020'\n    },\n    {\n        date: 'January 2020',\n        content: 'Started teaching my first class as the instructor of record! ([\"Data Visualization for Public Policy\"](https://capp-30239-winter-2020.netlify.app/))'\n    },\n    {\n        date: 'December 2019',\n        content: 'Received my Masters of Computer Science!!'\n    },\n    {\n        date: 'November 2019',\n        content: 'Our poster on using graph visualizations to compare 19th century scientific writing was shown at both MindBytes (where it won best poster!) and the 2019 Chicago Colloquium on Digital Humanities.'\n    },\n    {\n        date: 'October 2019',\n        content: 'Had a great time at IEEEVIS 2019 in Vancouver, BC! Helped contribute to the [Open Access Vis](http://oavis.org/) efforts for the conference.'\n    },\n    {\n        date: 'September 2019',\n        content: 'Two of my vis projects (ForumExplorer and Cycles in Rain) were Long-Listed at the Kantar Information is Beautiful Awards.'\n    },\n    {\n        date: 'June 2019',\n        content: 'Started an internship with Tableau Research in Seattle'\n    },\n    {\n        date: 'June 2019',\n        content: '🎉🎉🎉 Successfully defended my masters thesis 🎉🎉🎉'\n    },\n    {\n        date: 'May 2019',\n        content: 'Presented our [poster on ForumExplorer](https://www.mcnutt.in/forum-explorer/) at EuroVis 2019 in Porto, Portugal.'\n    },\n    {\n        date: 'May 2019',\n        content: 'I was awarded the UChicago Department of Computer Science TA Prize for my work TAing Spring 2018 - Winter 2019.'\n    },\n    {\n        date: 'May 2019',\n        content: \"My piece 'On The Road To The Lake: Debugging in Tryptic' won second prize in the print media category of the UChicago Art+Science expo.\"\n    },\n    {\n        date: 'October 2018',\n        content: 'Presented our paper on linting charts created in matplotlib at VisGuides, a IEEEVIS 2018 workshop. '\n    }\n    // {\n    //   date: 'September 2018',\n    //   content: 'Started my second year of grad school!'\n    // }\n];\n","export const PUBLICATIONS = [\n    {\n        link: 'https://arxiv.org/pdf/2309.10108.pdf',\n        urlTitle: 'woz-ai',\n        imgLink: 'converted-images/woz.jpg',\n        title: 'How Do Data Analysts Respond to AI Assistance? A Wizard-of-Oz Study',\n        authors: 'Ken Gu, Madeleine Grunde-McLaughlin, Andrew McNutt, Jeffrey Heer, Tim Althoff',\n        journal: 'ACM CHI 2024',\n        date: '',\n        year: 2024,\n        links: [{ name: 'paper', link: 'https://arxiv.org/pdf/2309.10108.pdf' }],\n        abstract: `Data analysis is challenging as analysts must navigate nuanced decisions that may yield divergent conclusions. AI assistants have the potential to support analysts in planning their analyses, enabling more robust decision-making. Though AI-based assistants that target code execution (e.g., Github Copilot) have received significant attention, limited research addresses assistance for both analysis execution and planning. In this work, we characterize helpful planning suggestions and their impacts on analysts' workflows. We first review the analysis planning literature and crowd-sourced analysis studies to categorize suggestion content. We then conduct a Wizard-of-Oz study (n=13) to observe analysts' preferences and reactions to planning assistance in a realistic scenario. Our findings highlight subtleties in contextual factors that impact suggestion helpfulness, emphasizing design implications for supporting different abstractions of assistance, forms of initiative, increased engagement, and alignment of goals between analysts and assistants.`,\n        type: 'conference / journal articles',\n        subtype: 'conference'\n    },\n    {\n        link: 'https://arxiv.org/abs/2308.15429',\n        urlTitle: 'only-you',\n        imgLink: 'converted-images/only-you.jpg',\n        title: 'Only YOU Can Make IEEE VIS Environmentally Sustainable',\n        authors: 'Elsie Lee-Robbins, Andrew McNutt',\n        journal: 'alt.vis 2023',\n        date: '',\n        year: 2023,\n        links: [\n            { name: 'paper', link: 'https://arxiv.org/abs/2308.15429' },\n            { name: 'talk', link: 'https://www.youtube.com/watch?v=WDp75Puoh24' }\n        ],\n        abstract: `The IEEE VIS Conference (or VIS) hosts more than 1000 people annually. It brings together visualization researchers and practitioners from across the world to share new research and knowledge. Behind the scenes, a team of volunteers puts together the entire conference and makes sure it runs smoothly. Organizing involves logistics of the conference, ensuring that the attendees have an enjoyable time, allocating rooms to multiple concurrent tracks, and keeping the conference within budget. In recent years, the COVID-19 pandemic has abruptly disrupted plans, forcing organizers to switch to virtual, hybrid, and satellite formats. These alternatives offer many benefits:  fewer costs (e.g., travel, venue, institutional), greater accessibility (who can physically travel, who can get visas, who can get child care), and a lower carbon footprint (as people do not need to fly to attend). As many conferences begin to revert to the pre-pandemic status quo of primarily in-person conferences, we suggest that it is an opportune moment to reflect on the benefits and drawbacks of lower-carbon conference formats. To learn more about the logistics of conference organizing, we talked to 6 senior executive-level VIS organizers. We review some of the many considerations that go into planning, particularly with regard to how they influence decisions about alternative formats.   We aim to start a discussion about the sustainability of VIS---including sustainability for finance, volunteers, and, central to this work, the environment---for the next three years and the next three hundred years. `,\n        type: 'extended abstract / workshop papers',\n        subtype: 'workshop'\n    },\n    {\n        link: 'https://arxiv.org/abs/2308.16353',\n        urlTitle: 'notascope',\n        imgLink: 'converted-images/notascope.jpg',\n        title: 'Metrics-Based Evaluation and Comparison of Visualization Notations',\n        authors: 'Nicolas Kruchten, Andrew McNutt, Michael J. McGuffin',\n        journal: 'IEEE VIS 2023',\n        date: '',\n        year: 2023,\n        links: [\n            { name: 'live', link: 'https://app.notascope.io/' },\n            { name: 'osf', link: 'https://osf.io/8924y/' },\n            { name: 'paper', link: 'https://arxiv.org/abs/2308.16353' },\n            {\n                name: 'blog post',\n                link: 'https://medium.com/multiple-views-visualization-research-explained/metrics-for-reasoning-about-the-usability-of-visualization-notations-6c03b9292780'\n            }\n        ],\n        abstract: `A visualization notation is a recurring pattern of symbols used to author specifications of visualizations, from data transformation to visual mapping. Programmatic notations use symbols defined by grammars or domain-specific languages (e.g., ggplot2, dplyr, Vega-Lite) or libraries (e.g., Matplotlib, Pandas).   Designers and prospective users of grammars and libraries often evaluate visualization notations by inspecting galleries of examples.  While such collections demonstrate usage and expressiveness, their construction and evaluation are usually ad hoc, making comparisons of different notations difficult.  More rarely, experts analyze notations via usability heuristics, such as the Cognitive Dimensions of Notations framework. These analyses, akin to structured close readings of text, can reveal design deficiencies, but place a burden on the expert to simultaneously consider many facets of often complex systems.  To alleviate these issues, we introduce a metrics-based approach to usability evaluation and comparison of notations in which metrics are computed for a gallery of examples across a suite of notations.  While applicable to any visualization domain, we explore the utility of our approach via a case study considering statistical graphics that explores 40 visualizations across 9 widely used notations. We facilitate the computation of appropriate metrics and analysis via a new tool called NotaScope.  We gathered feedback via interviews with authors or maintainers of prominent charting libraries (n=6).  We find that this approach is a promising way to formalize, externalize, and extend evaluations and comparisons of visualization notations.`,\n        type: 'conference / journal articles',\n        subtype: 'conference'\n    },\n    {\n        link: 'https://arxiv.org/abs/2307.11260',\n        urlTitle: 'prong',\n        imgLink: 'converted-images/prong-logo.jpg',\n        title: 'Projectional Editors for JSON-Based DSLs',\n        authors: 'Andrew McNutt, Ravi Chugh',\n        journal: 'VL/HCC 2023',\n        date: '',\n        year: 2023,\n        links: [\n            { name: 'live', link: 'https://prong-editor.netlify.app/' },\n            { name: 'code', link: 'https://github.com/mcnuttandrew/prong' },\n            { name: 'paper', link: 'https://arxiv.org/abs/2307.11260' }\n        ],\n        abstract: `Augmenting text-based programming with rich structured interactions has been explored in many ways. Among these, projectional editors offer an enticing combination of structure editing and domain-specific program visualization. Yet such tools are typically bespoke and expensive to produce, leaving them inaccessible to many DSL and application designers.\n\nWe describe a relatively inexpensive way to build rich projectional editors for a large class of DSLs -- namely, those defined using JSON. Given any such JSON-based DSL, we derive a projectional editor through (i) a language-agnostic mapping from JSON Schemas to structure-editor GUIs and (ii) an API for application designers to implement custom views for the domain-specific types described in a schema. We implement these ideas in a prototype, Prong, which we illustrate with several examples including the Vega and Vega-Lite data visualization DSLs.`,\n        type: 'conference / journal articles',\n        subtype: 'conference'\n    },\n    {\n        link: '',\n        urlTitle: 'phd-thesis',\n        imgLink: 'converted-images/phd-thesis.jpg',\n        title: 'Understanding and Enhancing JSON-based DSL Interfaces for Visualization',\n        authors: 'Andrew McNutt (advised by Ravi Chugh)',\n        journal: 'Ph.D. Thesis. University of Chicago, Department of Computer Science, 2023',\n        date: '',\n        year: 2023,\n        links: [\n            { name: 'paper', link: 'https://osf.io/fy246' },\n            { name: 'supplementary materials', link: 'https://osf.io/ywcqa/' }\n        ],\n        abstract: `Domain-specific languages represented in data serialization formats (such as Javascript Object Notation or JSON) are an increasingly common means to control numerous systems.\nThese range from database queries to application configuration, narrative generation, Twitter bots, data visualization, and many other areas.\nThese languages allow potentially unsophisticated human users to concisely specify their intent through logic and notation that is relevant to task domain.\nFurther, they provide a means for computational agents to easily manipulate that form, allowing for powerful recommendation engines and systems of automated analyses.\n\nIn this thesis, we consider how end-user agency might be enhanced and maintained through the design of tools that support these domain-specific languages, as well as through the study of the design of the languages themselves.\nIn support of this goal, we conducted four interconnected projects which variously study how JSON-based DSLs are designed, how abstraction can be integrated into those languages, how interfaces can be designed to specifically facilitate their manipulation, as well as how those programs might be automatically validated.\nThrough these projects, we demonstrate that giving primacy to these textual interfaces as design elements can be valuable for end users.\nWe find that this style of interventions are useful for helping end users learn, use, and re-use programs written in these languages.\nWe primarily consider languages focused on data visualization tasks, as there has been substantial work in the visualization research community on this form of interface—although the lessons learned could be applied to any relevant domain.`,\n        type: 'theses / book chapters',\n        subtype: 'thesis'\n    },\n    {\n        link: 'https://osf.io/3jrcm/',\n        urlTitle: 'doom-n-fruit',\n        imgLink: 'converted-images/doom-n-fruit.jpg',\n        title: 'Doom or Deliciousness: Challenges and Opportunities for Visualization in the Age of Generative Models',\n        authors: 'Victor Schetinger, Sara Di Bartolomeo, Mennatallah El-Assady, Andrew McNutt, Matthias Miller, João Paulo Apolinário Passos, Jane L. Adams',\n        journal: 'EuroVis 2023',\n        date: '',\n        year: 2023,\n        links: [{ name: 'paper', link: 'https://osf.io/3jrcm/' }],\n        abstract: `Generative text-to-image models (as exemplified by DALL-E, MidJourney, and Stable Diffusion) have recently made enormous technological leaps, demonstrating impressive results in many graphical domains---from logo design to digital painting and photographic composition. However, the quality of these results has led to existential crises in some fields of art, leading to questions about the role of human agency in the production of meaning in a graphical context. Such issues are central to visualization, and while these generative models have yet to be widely applied to visualization, it seems only a matter of time until their integration is manifest. Seeking to circumvent similar ponderous dilemmas, we attempt to understand the roles that generative models might play across visualization. We do so by constructing a framework that characterizes what these technologies offer at various stages of the visualization workflow, augmented and analyzed through semi-structured interviews with 19 experts from related domains. Through this work, we map the space of opportunities and risks that might arise in this intersection, identifying doomsday prophecies and delicious low-hanging fruits that are ripe for research.`,\n        type: 'conference / journal articles',\n        subtype: 'journal'\n    },\n    {\n        link: 'https://arxiv.org/abs/2301.11178',\n        urlTitle: 'ai-4-notebooks',\n        imgLink: 'converted-images/meta-cells-image.jpg',\n        title: 'On the Design of AI-powered Code Assistants for Notebooks',\n        authors: 'Andrew McNutt, Chenglong Wang, Rob DeLine, Steven M. Drucker',\n        journal: 'ACM CHI 2023',\n        date: '',\n        links: [\n            { name: 'paper', link: 'https://arxiv.org/abs/2301.11178' },\n            { name: 'talk', link: 'https://www.youtube.com/watch?v=g0prh8mE3bI' }\n        ],\n        abstract: `AI-powered code assistants, such as Copilot, are quickly becoming a ubiquitous component of contemporary coding contexts. Among these environments, computational notebooks, such as Jupyter, are of particular interest as they provide rich interface affordances that interleave code and output in a manner that allows for both exploratory and presentational work. Despite their popularity, little is known about the appropriate design of code assistants in notebooks. We investigate the potential of code assistants in computational notebooks by creating a design space (reified from a survey of extant tools) and through an interview-design study (with 15 practicing data scientists). Through this work, we identify challenges and opportunities for future systems in this space, such as the value of disambiguation for tasks like data visualization, the potential of tightly scoped domain-specific tools (like linters), and the importance of polite assistants.`,\n        year: 2023,\n        type: 'conference / journal articles',\n        subtype: 'conference'\n    },\n    {\n        link: 'https://arxiv.org/pdf/2301.13302',\n        urlTitle: 'sauce',\n        imgLink: 'converted-images/sauce-image.jpg',\n        title: 'A Study of Editor Features in a Creative Coding Classroom',\n        authors: 'Andrew McNutt, Anton Outkine, Ravi Chugh',\n        journal: 'ACM CHI 2023',\n        year: 2023,\n        date: '',\n        links: [\n            { name: 'paper', link: 'https://arxiv.org/pdf/2301.13302' },\n            { name: 'live', link: 'http://cs111.org/' },\n            { name: 'talk', link: 'https://www.youtube.com/watch?v=g2GkTdOKU3A' }\n        ],\n        abstract: 'Creative coding is a rapidly expanding domain for both artistic expression and computational education. Numerous libraries and IDEs support creative coding, however there has been little consideration of how the environments themselves might be designed to serve these twin goals. To investigate this gap, we implemented and used an experimental editor to teach a sequence of college and high-school creative coding courses. In the first year, we conducted a log analysis of student work (n=39) and surveys regarding prospective features (n=25). These guided our implementation of common enhancements (e.g. color pickers) as well as uncommon ones (e.g. bidirectional shape editing). In the second year, we studied the effects of these features through logging (n=39+) and survey (n=23) studies. Reflecting on the results, we identify opportunities to improve creativity- and novice-focused IDEs and highlight tensions in their design (as in tools that augment artistry or efficiency but may hinder learning).',\n        type: 'conference / journal articles',\n        subtype: 'conference'\n    },\n    {\n        link: 'https://arxiv.org/abs/2207.07998',\n        urlTitle: 'no-grammar',\n        imgLink: 'converted-images/no-grammar.jpg',\n        title: 'No Grammar to Rule Them All: A Survey of JSON-Style DSLs for Visualization',\n        authors: 'Andrew McNutt',\n        year: 2022,\n        journal: 'IEEE VIS 2022',\n        date: '',\n        links: [\n            { name: 'paper', link: 'https://arxiv.org/abs/2207.07998' },\n            { name: 'live', link: 'https://vis-json-dsls.netlify.app/' },\n            { name: 'talk', link: 'https://youtu.be/GMy2QCE-y7o?t=3783' },\n            {\n                name: 'replicability badge',\n                link: 'http://www.replicabilitystamp.org/#https-github-com-mcnuttandrew-no-grammar-supplement'\n            },\n            {\n                name: 'press',\n                link: 'https://mcorrell.medium.com/visualization-in-the-wild-a-trip-report-from-vis-2022-c42311b95f28'\n            }\n        ],\n        abstract: 'There has been substantial growth in the use of JSON-based grammars, as well as other standard data serialization languages, to create visualizations. Each of these grammars serves a purpose: some focus on particular computational tasks (such as animation), some are concerned with certain chart types (such as maps), and some target specific data domains (such as ML). Despite the prominence of this interface form, there has been little detailed analysis of the characteristics of these languages.  In this study, we survey and analyze the design and implementation of 57 JSON-style DSLs for visualization. We analyze these languages supported by a collected corpus of examples for each DSL (consisting of 4395 instances) across a variety of axes organized into concerns related to domain, conceptual model, language relationships, affordances, and general practicalities. We identify tensions throughout these areas, such as between formal and colloquial specifications, among types of users, and within the composition of languages. Through this work, we seek to support language implementers by elucidating the choices, opportunities, and tradeoffs in visualization DSL design.',\n        type: 'conference / journal articles',\n        subtype: 'journal'\n    },\n    {\n        link: 'https://link.springer.com/article/10.1007/s12064-022-00376-8',\n        urlTitle: 'goethe-candolle',\n        imgLink: 'converted-images/goethe-candolle.jpg',\n        title: 'Goethe and Candolle: National forms of scientific writing?',\n        authors: 'Agatha Seo-Hyun Kim, Andrew McNutt ',\n        journal: 'Theory in Biosciences',\n        year: 2022,\n        date: 'August 2022',\n        links: [{ name: 'paper', link: 'https://link.springer.com/article/10.1007/s12064-022-00376-8' }],\n        abstract: 'What role does nationality—or the image of a nation—play in how one thinks and receives scientific ideas? This paper investigates the commonly held ideas about “German science” and “French science” in early nineteenth-century France. During the politically turbulent time, the seemingly independent scientific community found itself in a difficult position: first, between the cosmopolitan ideals of scientific community and the invasive political reality, and second, between the popularized image of national differences and the actual comparisons of international scientific ideas. The tension between multiple sets of fictions and realities underscores the fragility of the concept of nationality as a scientific measure. A case study comparing morphological ideas, receptions in France, and the actual scientific texts of J. W. von Goethe and A. P. de Candolle further illustrates this fragility. Goethe and Candolle make an ideal comparative case because they were received in very different lights despite their similar concept of the plant type. Our sentence-classification and visualization methods are applied to their scientific texts, to compare the actual compositions and forms of the texts that purportedly represented German and French sciences. This paper concludes that there was a gap between what French readers assumed they read and what they really read, when it came to foreign scientific texts. The differences between Goethe’s and Candolle’s texts transcended the perceived national differences between German Romanticism and French Classicism.',\n        type: 'conference / journal articles',\n        subtype: 'journal'\n    },\n    {\n        link: 'https://www.blaseur.com/papers/rationales-naacl22.pdf',\n        urlTitle: 'explaining-why',\n        imgLink: 'converted-images/explaining-why.jpg',\n        title: 'Explaining Why: How Instructions and User Interfaces Impact Annotator Rationales When Labeling Text Data',\n        authors: 'Jamar L. Sullivan, Will Brackenbury, Andrew McNutt, Kevin Bryson, Kwam Byll, Yuxin Chen, Michael Littman, Chenhao Tan, Blase Ur',\n        journal: 'NAACL 2022',\n        date: '',\n        year: 2022,\n        links: [\n            { name: 'paper', link: 'https://www.blaseur.com/papers/rationales-naacl22.pdf' },\n            {\n                name: 'replicability badge',\n                link: 'https://naacl2022-reproducibility-track.github.io/results/'\n            },\n            {\n                name: 'code',\n                link: 'https://github.com/UChicagoSUPERgroup/rationales-naacl22'\n            }\n        ],\n        abstract: 'In the context of data labeling, NLP researchers are increasingly interested in having humans select _rationales_, a subset of input tokens relevant to the chosen label. We conducted a 332-participant online user study to understand how humans select rationales, especially how different instructions and user interface affordances impact the rationales chosen. Participants labeled ten movie reviews as positive or negative, selecting words and phrases supporting their label as rationales. We varied the instructions given, the rationale-selection task, and the user interface. Participants often selected about 12% of input tokens as rationales, but selected fewer if unable to drag over multiple tokens at once. Whereas participants were near unanimous in their data labels, they were far less consistent in their rationales. The user interface affordances and task greatly impacted the types of rationales chosen. We also observed large variance across participants.',\n        type: 'conference / journal articles',\n        subtype: 'conference'\n    },\n    {\n        link: 'https://arxiv.org/abs/2109.06007',\n        urlTitle: 'vis-4-villainy',\n        imgLink: 'converted-images/villainy.jpg',\n        title: 'Visualization for Villainy',\n        authors: 'Andrew McNutt, Lilian Huang, Kathryn Koenig',\n        journal: 'alt.vis 2021',\n        date: '',\n        links: [\n            { name: 'paper', link: 'https://arxiv.org/abs/2109.06007' },\n            { name: 'talk', link: 'https://youtu.be/jFbsYto_2ys?t=1471' }\n        ],\n        year: 2021,\n        abstract: 'Visualization has long been seen as a dependable and trustworthy tool for carrying out analysis and communication tasks -- a view reinforced by the growing interest in applying it to socially positive ends. However, despite the benign light in which visualization is usually perceived, it carries the potential to do harm to people, places, concepts, and things. In this paper, we capitalize on this negative potential to serve an underrepresented (but technologically engaged) group: villains. To achieve these ends, we introduce a design space for this type of graphical violence, which allows us to unify prior work on deceptive visualization with novel data-driven dastardly deeds, such as emotional spear phishing and unsafe data physicalization. By charting this vile charting landscape, we open new doors to collaboration with terrifying domain experts, and hopefully, make the world just a bit worse.',\n        type: 'extended abstract / workshop papers',\n        subtype: 'workshop'\n    },\n    {\n        link: 'https://www.blaseur.com/papers/uist21-kondocloud.pdf',\n        urlTitle: 'kondoCloud',\n        imgLink: 'converted-images/kondo.jpg',\n        title: 'KondoCloud: Improving Information Management in Cloud Storage via Recommendations Based on File Similarity',\n        authors: 'Will Brackenbury, Andrew McNutt, Kyle Chard, Aaron Elmore, Blase Ur',\n        journal: 'ACM UIST 2021',\n        year: 2021,\n        date: '',\n        links: [\n            { name: 'paper', link: 'https://www.blaseur.com/papers/uist21-kondocloud.pdf' },\n            { name: 'code', link: 'https://github.com/wbrackenbury/KondoCloud' }\n        ],\n        abstract: \"Users face many challenges in keeping their personal file collections organized. While current file-management interfaces help users retrieve files in disorganized repositories, they do not aid in organization. Pertinent files can be difficult to find, and files that should have been deleted may remain. To help, we designed KondoCloud, a file-browser interface for personal cloud storage. KondoCloud makes machine learning-based recommendations of files users may want to retrieve, move, or delete. These recommendations leverage the intuition that similar files should be managed similarly.<br/><br/>We developed and evaluated KondoCloud through two complementary online user studies. In our Observation Study, we logged the actions of 69 participants who spent 30 minutes manually organizing their own Google Drive repositories. We identified high-level organizational strategies, including moving related files to newly created sub-folders and extensively deleting files. To train the classifiers that underpin KondoCloud's recommendations, we had participants label whether pairs of files were similar and whether they should be managed similarly. In addition, we extracted ten metadata and content features from all files in participants' repositories. Our logistic regression classifiers all achieved F1 scores of 0.72 or higher. In our Evaluation Study, 62 participants used KondoCloud either with or without recommendations. Roughly half of participants accepted a non-trivial fraction of recommendations, and some participants accepted nearly all of them. Participants who were shown the recommendations were more likely to delete related files located in different directories. They also generally felt the recommendations improved efficiency. Participants who were not shown recommendations nonetheless manually performed about a third of the actions that would have been recommended.\",\n        type: 'conference / journal articles',\n        subtype: 'conference'\n    },\n    {\n        link: 'https://www.mcnutt.in/zine-potential',\n        urlTitle: '',\n        shortTitle: 'zine-potential',\n        imgLink: 'converted-images/zine-potential.jpg',\n        title: 'On The Potential of Zines as a Medium for Visualization',\n        authors: 'Andrew McNutt',\n        year: 2021,\n        journal: 'IEEE VIS 2021 (Short Papers)',\n        date: '',\n        links: [\n            { name: 'about', link: 'https://www.mcnutt.in/zine-potential' },\n            { name: 'paper', link: 'https://arxiv.org/abs/2108.02177' },\n            { name: 'talk', link: 'https://youtu.be/khhlIrowR_g' }\n        ],\n        abstract: 'Zines are a form of small-circulation self-produced publication often akin to a magazine. This free-form medium has a long history and has been used as means for personal or intimate expression, as a way for marginalized people to describe issues that are important to them, and as a venue for graphical experimentation. It would seem then that zines would make an ideal vehicle for the recent interest in applying feminist or humanist ideas to visualization. Yet, there has been little work combining visualization and zines. In this paper we explore the potential of this intersection by analyzing examples of zines that use data graphics and by describing the pedagogical value that they can have in a visualization classroom. In doing so, we argue that there are plentiful opportunities for visualization research and practice in this rich intersectional-medium.',\n        type: 'conference / journal articles',\n        subtype: 'conference'\n    },\n    {\n        link: 'https://arxiv.org/abs/2104.04042',\n        urlTitle: 'tacos',\n        imgLink: 'converted-images/tacos.jpg',\n        title: 'What are Table Cartograms Good for Anyway? An Algebraic Analysis',\n        authors: 'Andrew McNutt',\n        journal: 'EuroVis 2021 🏆 Honorable Mention for Best Paper 🏆 (Juried Selection, 1 awarded)',\n        date: '',\n        year: 2021,\n        links: [\n            { name: 'about', link: '#/research/tacos' },\n            { name: 'paper', link: 'https://arxiv.org/abs/2104.04042' },\n            { name: 'talk', link: 'https://www.youtube.com/watch?v=ozBn5bLsGQw&t=2594s' }\n        ],\n        abstract: `Unfamiliar or esoteric visual forms arise in many areas of visualization. While such forms can be intriguing, it can be unclear how to make effective use of them without long periods of practice or costly user studies. In this work we analyze the table cartogram—a graphic which visualizes tabular data by bringing the areas of a grid of quadrilaterals into correspondence with the input data, like a heat map that has been *area-ed* rather than colored. Despite having existed for several years, little is known about its appropriate usage. We mend this gap by using Algebraic Visualization Design to show that they are best suited to relatively small tables with ordinal axes for some comparison and outlier identification tasks. In doing so we demonstrate a discount theory-based analysis that can be used to cheaply determine best practices for unknown visualizations.\n    `,\n        type: 'conference / journal articles',\n        subtype: 'journal'\n    },\n    {\n        link: 'https://arxiv.org/abs/2101.07902',\n        urlTitle: 'ivy',\n        imgLink: 'converted-images/ivy.jpg',\n        title: 'Integrated Visualization Editing via Parameterized Declarative Templates',\n        authors: 'Andrew McNutt, Ravi Chugh',\n        // journal: 'Proceedings of the 2021 ACM annual conference on Human Factors in Computing Systems',\n        journal: 'ACM CHI 2021',\n        date: '',\n        year: 2021,\n        links: [\n            { name: 'about', link: '#/research/ivy' },\n            { name: 'live', link: 'https://github.com/mcnuttandrew/ivy' },\n            { name: 'paper', link: 'https://arxiv.org/abs/2101.07902' },\n            { name: 'osf', link: 'https://osf.io/cture/' },\n            { name: 'talk', link: 'https://www.youtube.com/watch?v=FzIdVnSi9Po' }\n        ],\n        abstract: `\nInterfaces for creating visualizations typically embrace one of several common forms. Textual specification enables fine-grained control, shelf building facilitates rapid exploration, while chart choosing promotes immediacy and simplicity. Ideally these approaches could be unified to integrate the user- and usage-dependent benefits found in each modality, yet these forms remain distinct.\n\n<br />\nWe propose parameterized declarative templates, a simple abstraction mechanism over JSON-based visualization grammars, as a foundation for multimodal visualization editors. We demonstrate how templates can facilitate organization and reuse by factoring the more than 160 charts that constitute Vega-Lite's example gallery into approximately 40 templates. We exemplify the pliability of abstracting over charting grammars by implementing—as a template—the functionality of the shelf builder Polestar (a simulacra of Tableau) and a set of templates that emulate the Google Sheets chart chooser. We show how templates support multimodal visualization editing by implementing a prototype and evaluating it through an approachability study.`,\n        type: 'conference / journal articles',\n        subtype: 'conference'\n    },\n    {\n        link: 'https://arxiv.org/abs/2009.02384',\n        urlTitle: 'nearby',\n        imgLink: 'converted-images/nearby-preview.jpg',\n        year: 2020,\n        title: 'Supporting Expert Close Analysis of Historical Scientific Writings: A Case Study for Near-by Reading',\n        authors: 'Andrew McNutt, Agatha Seo-Hyun Kim, Sergio Elahi, Kazutaka Takahashi',\n        journal: 'Visualization for the Digital Humanities (VIS4DH) 2020',\n        date: '',\n        links: [\n            { name: 'about', link: '#/research/nearby' },\n            { name: 'paper', link: 'https://arxiv.org/abs/2009.02384' },\n            { name: 'code', link: 'https://github.com/mcnuttandrew/sci-text-compare' },\n            { name: 'live', link: 'https://goetheanddecandolle.rcc.uchicago.edu/' }\n        ],\n        abstract: 'Distant reading methodologies make use of computational processes to aid in the analysis of large text corpora which might not be pliable to traditional methods of scholarly analysis due to their volume. While these methods have been applied effectively to a variety of types of texts and contexts, they can leave unaddressed the needs of scholars in the humanities disciplines like history, who often engage in close reading of sources. Complementing the close analysis of texts with some of the tools of distant reading, such as visualization, can resolve some of the issues. We focus on a particular category of this intersection—which we refer to as near-by reading—wherein an expert engages in a computer-mediated analysis of a text with which they are familiar. We provide an example of this approach by developing a visual analysis application for the near-by reading of 19th-century scientific writings by J. W. von Goethe and A. P. de Candolle. We show that even the most formal and public texts, such as scientific treatises, can reveal unexpressed personal biases and philosophies that the authors themselves might not have recognized.',\n        type: 'extended abstract / workshop papers',\n        subtype: 'workshop'\n    },\n    {\n        link: 'https://www.mcnutt.in/table-cartogram/',\n        urlTitle: 'table-cartogram',\n        imgLink: 'converted-images/tc-preview.jpg',\n        title: 'A Minimally Constrained Optimization Algorithm for Table Cartograms',\n        authors: 'Andrew McNutt, Gordon Kindlmann',\n        year: 2020,\n        journal: 'VIS 2020 - InfoVIS Poster Track 🏆 Honorable Mention for Best Poster Research 🏆 (Juried Selection, 2 awarded)',\n        date: '',\n        links: [\n            { name: 'about', link: '#/research/table-cartogram' },\n            { name: 'paper', link: 'https://osf.io/kem6j/' },\n            { name: 'code', link: 'https://github.com/mcnuttandrew/table-cartogram' },\n            { name: 'poster', link: 'assets/table-cartogram-poster.pdf' },\n            { name: 'live', link: 'https://www.mcnutt.in/table-cartogram/' }\n        ],\n        abstract: 'Table cartograms are a recent type of data visualization that encodes numerical tabular data as a grid of quadrilaterals whose area are brought into correspondence with the input data. The overall effect is similar to that of a heat map that has been ‘area-ed‘ rather than shaded. There exist several algorithms for creating these structures—variously utilizing techniques such as computational geometry and numerical optimization —yet each of them impose aesthetically-motivated conditions that impede fine tuning or manipulation of the visual aesthetic of the output. In this work we contribute an optimization algorithm for creating table cartograms that is able to compute a variety of table cartograms layouts for a single dataset. We make our web-ready implementation available as table-cartogram.ts',\n        type: 'posters',\n        subtype: 'poster'\n    },\n    {\n        link: 'https://arxiv.org/abs/2001.02316',\n        urlTitle: 'mirage',\n        imgLink: 'converted-images/surfacing-visualization-mirages.jpg',\n        title: 'Surfacing Visualization Mirages',\n        authors: 'Andrew McNutt, Gordon Kindlmann, Michael Correll',\n        year: 2020,\n        // journal:\n        //   'Proceedings of the 2020 ACM annual conference on Human Factors in Computing Systems <br/> 🏆 Honorable Mention for Best Paper 🏆 (Top 5% of papers)',\n        journal: 'ACM CHI 2020 🏆 Honorable Mention for Best Paper 🏆 (Top 5% of papers)',\n        date: '',\n        links: [\n            { name: 'about', link: '#/research/mirage' },\n            {\n                name: 'blog post',\n                link: 'https://medium.com/multiple-views-visualization-research-explained/surfacing-visualization-mirages-8d39e547e38c'\n            },\n            { name: 'paper', link: 'https://arxiv.org/abs/2001.02316' },\n            { name: 'live', link: 'https://metamorphic-linting.netlify.com/' },\n            { name: 'code', link: 'https://github.com/tableau/Visualization-Linting' },\n            { name: 'osf', link: 'https://osf.io/je3x9' },\n            { name: 'slides', link: 'talks/mirage-talk.pdf' },\n            { name: 'talk', link: 'https://www.youtube.com/watch?v=arHbVFbq-mQ' }\n        ],\n        abstract: 'Dirty data and deceptive design practices can undermine, invert, or invalidate the purported messages of charts and graphs. These failures can arise silently: a conclusion derived from a particular visualization may look plausible unless the analyst looks closer and discovers an issue with the backing data, visual specification, or their own assumptions. We term such silent but significant failures visualization mirages. We describe a conceptual model of mirages and show how they can be generated at every stage of the visual analytics process. We adapt a methodology from software testing, metamorphic testing, as a way of automatically surfacing potential mirages at the visual encoding stage of analysis through modifications to the underlying data and chart specification. We show that metamorphic testing can reliably identify mirages across a variety of chart types with relatively little prior knowledge of the data or the domain.',\n        type: 'conference / journal articles',\n        subtype: 'conference'\n    },\n    {\n        link: 'https://www.tableau.com/sites/default/files/2023-01/altchi-tarot-cameraready.pdf',\n        imgLink: 'converted-images/vis-tarot.jpg',\n        urlTitle: 'tarot',\n        title: 'Divining Insights: Visual Analytics Through Cartomancy',\n        authors: 'Andrew McNutt, Anamaria Crisan, Michael Correll',\n        journal: 'alt.CHI 2020',\n        year: 2020,\n        date: '',\n        links: [\n            { name: 'about', link: '#/research/tarot' },\n            {\n                name: 'paper',\n                link: 'https://www.tableau.com/sites/default/files/2023-01/altchi-tarot-cameraready.pdf'\n            },\n            { name: 'live', link: 'https://vis-tarot.netlify.com/' },\n            { name: 'code', link: 'https://github.com/mcorrell/vis-tarot' },\n            { name: 'slides', link: 'talks/tarot-talk.pdf' },\n            { name: 'talk', link: 'https://www.youtube.com/watch?v=fRA42BjyG_Q' }\n        ],\n        abstract: 'Our interactions with data, visual analytics included, are increasingly shaped by automated or algorithmic systems. An open question is how to give analysts the tools to interpret these “automatic insights” while also inculcating critical engagement with algorithmic analysis. We present a system, Sortilège, that uses the metaphor of a Tarot card reading to provide an overview of automatically detected patterns in data in a way that is meant to encourage critique, reflection, and healthy skepticism.',\n        type: 'extended abstract / workshop papers',\n        subtype: 'ex. abs.'\n    },\n    {\n        link: 'https://www.mcnutt.in/ms-zine/',\n        imgLink: 'converted-images/ms-thesis.jpg',\n        title: 'Design and Analysis of Table Cartograms: Simultaneous Multipurpose Tabular Area-encoding Displays',\n        urlTitle: 'ms-thesis',\n        authors: 'Andrew McNutt (Advised by Gordon Kindlmann)',\n        journal: 'Masters thesis. University of Chicago',\n        date: 'June 2018',\n        year: 2018,\n        links: [{ name: 'zine', link: 'https://www.mcnutt.in/ms-zine/' }],\n        abstract: '',\n        type: 'theses / book chapters',\n        subtype: 'thesis'\n    },\n    {\n        imgLink: 'converted-images/agathas-thing.jpg',\n        urlTitle: 'goethe-poster',\n        title: 'Textual Analysis & Comparison National Forms of Scientific Texts: Goethe + de Candolle',\n        authors: 'Agatha Seo-Hyun Kim, Andrew McNutt, Sergio Elahi, Kazutaka Takahashi, Robert J Richards',\n        journal: 'MindBytes Research Symposium 2019. 🏆 Best Poster in Visualization 🏆',\n        year: 2019,\n        date: '',\n        links: [\n            { name: 'poster', link: 'assets/posterkim102519.pdf' },\n            // {name: 'live', link: 'https://goetheanddecandolle.rcc.uchicago.edu/'},\n            {\n                name: 'award',\n                link: 'https://rcc.uchicago.edu/about-rcc/news-features/mind-bytes-2019-tipping-point-computational-and-ai-research'\n            }\n        ],\n        abstract: \"When the 19th-century European scientists were evaluating each other's ideas, they frequently validated their opinions by referring to the nationality of a given scientist as an explanatory type. Is there such a thing as 'national science'? This project examines widely-held ideas about the German and French styles of science in early 19th-century France. During this politically volatile period scientists found themselves in a difficult position. Between the aggressive political reality and the ideals of the cosmopolitan scientific community; as well as between the popularized image of national differences and the actual comparisons of the scientific ideas across national borders. As a case study, Goethe's and Candolle's botanical ideas, their receptions in France, and their actual texts are compared. We contrast these texts in detail through several types of interactive visualizations.\",\n        type: 'posters',\n        subtype: 'poster'\n    },\n    {\n        link: 'https://diglib.eg.org/xmlui/bitstream/handle/10.2312/eurp20191144/053-055.pdf',\n        imgLink: 'converted-images/forested-tree-view-example.jpg',\n        title: 'Improving the Scalability of Interactive Visualization Systems for Exploring Threaded Conversations',\n        authors: 'Andrew McNutt, Gordon Kindlmann',\n        urlTitle: 'forum-explorer-eurovis',\n        year: 2019,\n        // journal: 'Proceedings of the Eurographics Conference on Visualization \"EuroVis\" - Posters',\n        journal: 'EuroVis 2019 (Posters)',\n        date: '',\n        links: [\n            { name: 'paper', link: 'https://diglib.eg.org/xmlui/bitstream/handle/10.2312/eurp20191144/053-055.pdf' },\n            { name: 'poster', link: 'assets/forum-explorer-poster.pdf' },\n            { name: 'live', link: 'https://www.mcnutt.in/forum-explorer/' },\n            { name: 'code', link: 'https://github.com/mcnuttandrew/forum-explorer' },\n            { name: 'osf', link: 'https://osf.io/nrhqw/' },\n            {\n                name: 'award',\n                link: 'https://rcc.uchicago.edu/about-rcc/news-features/mind-bytes-2019-tipping-point-computational-and-ai-research'\n            }\n        ],\n        abstract: 'Large threaded conversations, such as those found on YCombinator’s HackerNews, are typically presented in a way that shows individual comments clearly, but can obscure larger trends or patterns within the conversational corpus. Previous research has addressed this problem through graphical-overviews and NLP-generated summaries. These efforts have generally assumed a particular (and modest) data size, which limits their utility for large or deeply-nested conversations, and often require non-trivial offline processing time, which makes them impractical for day-to-day usage. We describe here Forum Explorer, a Chrome extension that combines and expands upon prior art through a collection of techniques that enable this type of representation to handle wider ranges of data in real time. Materials for this project are available at https://osf.io/nrhqw/.',\n        type: 'posters',\n        subtype: 'poster'\n    },\n    {\n        link: 'assets/McNutt_Kindlmann_2018.pdf',\n        imgLink: 'converted-images/lint-pic.jpg',\n        urlTitle: 'linting-visguides',\n        title: 'Linting for Visualization: Towards a Practical Automated Visualization Guidance System',\n        authors: 'Andrew McNutt, Gordon Kindlmann',\n        year: 2018,\n        journal: 'IEEE VIS Workshop on Creation, Curation, Critique and Conditioning of Principles and Guidelines in Visualization (VisGuides 2018)',\n        date: '',\n        links: [\n            { name: 'paper', link: 'assets/McNutt_Kindlmann_2018.pdf' },\n            { name: 'code', link: 'https://github.com/mcnuttandrew/vislint_mpl' },\n            { name: 'slides', link: 'talks/vis-lint-talk.pdf' }\n        ],\n        abstract: ' Constructing effective charts and graphs in a scientific setting is a nuanced task that requires a thorough understanding of visualization design; a knowledge that may not be available to all practicing scientists. Previous attempts to address this problem have pushed chart creators to pore over large collections of guidelines and heuristics, or to relegate their entire workflow to end-to-end tools that provide automated recommendations. In this paper we bring together these two strains of ideas by introducing the use of lint as a mechanism for guiding chart creators towards effective visualizations in a manner that can be configured to taste and task without forcing users to abandon their usual workflows. The programmatic evaluation model of visualization linting (or vis lint) offers a compelling framework for the automation of visualization guidelines, as it offers unambiguous feedback during the chart creation process, and can execute analyses derived from machine vision and natural language processing. We demonstrate the feasibility of this system through the production of vislint_mpl, a prototype visualization linting system, that evaluates charts created in matplotlib.',\n        type: 'extended abstract / workshop papers',\n        subtype: 'workshop'\n    },\n    {\n        link: 'https://link.springer.com/protocol/10.1007/978-1-4939-7724-6_14',\n        imgLink: 'converted-images/cdd-pic.jpg',\n        urlTitle: 'reporter-assays',\n        title: 'Data Mining and Computational Modeling of High-Throughput Screening Datasets',\n        authors: `Sean Ekins, Alex M. Clark, Krishna Dole, Kellan Gregory, Andrew McNutt,\n    Anna Coulon Spektor, Charlie Weatherall, Nadia K Litterman, Barry A Bunin`,\n        journal: 'Reporter Gene Assays',\n        year: 2018,\n        date: '2018',\n        links: [{ name: 'paper', link: 'https://link.springer.com/protocol/10.1007/978-1-4939-7724-6_14' }],\n        abstract: 'We are now seeing the benefit of investments made over the last decade in high-throughput screening (HTS) that is resulting in large structure activity datasets entering public and open databases such as ChEMBL and PubChem. The growth of academic HTS screening centers and the increasing move to academia for early stage drug discovery suggests a great need for the informatics tools and methods to mine such data and learn from it. Collaborative Drug Discovery, Inc. (CDD) has developed a number of tools for storing, mining, securely and selectively sharing, as well as learning from such HTS data. We present a new web based data mining and visualization module directly within the CDD Vault platform for high-throughput drug discovery data that makes use of a novel technology stack following modern reactive design principles. We also describe CDD Models within the CDD Vault platform that enables researchers to share models, share predictions from models, and create models from distributed, heterogeneous data. Our system is built on top of the Collaborative Drug Discovery Vault Activity and Registration data repository ecosystem which allows users to manipulate and visualize thousands of molecules in real time. This can be performed in any browser on any platform. In this chapter we present examples of its use with public datasets in CDD Vault. Such approaches can complement other cheminformatics tools, whether open source or commercial, in providing approaches for data mining and modeling of HTS data.',\n        type: 'theses / book chapters',\n        subtype: 'chapter'\n    },\n    {\n        link: 'https://arxiv.org/abs/1501.07537',\n        imgLink: 'converted-images/qgrav-pic.jpg',\n        title: 'The Schrodinger-Newton System with Self-field Coupling',\n        authors: 'Joel Franklin, Youdan Guo, Andrew McNutt, Allison Morgan',\n        urlTitle: 'qgrav',\n        journal: 'Journal of Classical and Quantum Gravity',\n        year: 2015,\n        date: '2015',\n        links: [\n            { name: 'paper', link: 'https://arxiv.org/abs/1501.07537' },\n            { name: 'slides', link: 'assets/QGravPresentation.pdf' }\n        ],\n        abstract: \"We study the Schrodinger-Newton system of equations with the addition of gravitational field energy sourcing - such additional nonlinearity is to be expected from a theory of gravity (like general relativity), and its appearance in this simplified scalar setting (one of Einstein's precursors to general relativity) leads to significant changes in the spectrum of the self-gravitating theory. Using an iterative technique, we compare the mass dependence of the ground state energies of both Schrodinger-Newton and the new, self-sourced system and find that they are dramatically different. The Bohr method approach from old quantization provides a qualitative description of the difference, which comes from the additional nonlinearity introduced in the self-sourced case. In addition to comparison of ground state energies, we calculate the transition energy between the ground state and first excited state to compare emission frequencies between Schrodinger-Newton and the self-coupled scalar case.\",\n        type: 'conference / journal articles',\n        subtype: 'journal'\n    },\n    {\n        link: 'http://pubs.acs.org/doi/abs/10.1021/acs.jcim.5b00143',\n        imgLink: 'converted-images/cdd-models-pic.jpg',\n        title: 'Open source Bayesian models. 1. Application to ADME/Tox and drug discovery datasets',\n        urlTitle: 'bayes-models',\n        authors: `Alex M. Clark, Krishna Dole, Anna Coulon-Spektor, Andrew McNutt,\n    George Grass, Joel S. Freundlich, Robert C. Reynolds, Sean Ekins`,\n        journal: 'Journal of Chemical Information and Modeling',\n        date: '2015',\n        year: 2015,\n        links: [{ name: 'paper', link: 'http://pubs.acs.org/doi/abs/10.1021/acs.jcim.5b00143' }],\n        abstract: 'On the order of hundreds of absorption, distribution, metabolism, excretion, and toxicity (ADME/Tox) models have been described in the literature in the past decade which are more often than not inaccessible to anyone but their authors. Public accessibility is also an issue with computational models for bioactivity, and the ability to share such models still remains a major challenge limiting drug discovery. We describe the creation of a reference implementation of a Bayesian model-building software module, which we have released as an open source component that is now included in the Chemistry Development Kit (CDK) project, as well as implemented in the CDD Vault and in several mobile apps. We use this implementation to build an array of Bayesian models for ADME/Tox, in vitro and in vivo bioactivity, and other physicochemical properties. We show that these models possess cross-validation receiver operator curve values comparable to those generated previously in prior publications using alternative tools. We have now described how the implementation of Bayesian models with FCFP6 descriptors generated in the CDD Vault enables the rapid production of robust machine learning models from public data or the user’s own datasets. The current study sets the stage for generating models in proprietary software (such as CDD) and exporting these models in a format that could be run in open source software using CDK components. This work also demonstrates that we can enable biocomputation across distributed private or public datasets to enhance drug discovery.',\n        type: 'conference / journal articles',\n        subtype: 'journal'\n    },\n    {\n        link: 'assets/thesis.pdf',\n        imgLink: 'converted-images/thesis-pic.jpg',\n        title: 'Nonequivalent Lagrangian Mechanics',\n        urlTitle: 'nonequiv',\n        authors: 'Andrew McNutt (Advised by Nelia Mann)',\n        journal: 'Undergraduate thesis. Reed College',\n        date: 'June 2014',\n        year: 2014,\n        links: [\n            { name: 'thesis', link: 'assets/thesis.pdf' },\n            { name: 'slides', link: 'assets/nlm-talk.pdf' }\n        ],\n        abstract: 'In this thesis we study a modern formalism known as Nonequivalent Lagrangian Mechanics, that is constructed on top of the traditional Lagrangian theory of mechanics. By making use of the non-uniqueness of the Lagrangian representation of dynamical systems, we are able to generate conservation laws in a way that is novel and, in many cases much faster than the traditional Noetherian analysis. In every case that we examine, these invariants turn out to be Noetherian invariants in disguise. We apply this theory to a wide variety of systems including predator-prey dynamics and damped driven harmonic motion.',\n        type: 'theses / book chapters',\n        subtype: 'thesis'\n    }\n];\n","const ZINES = [\n    {\n        title: 'Design and Analysis of Table Cartograms',\n        link: 'https://www.mcnutt.in/ms-zine/',\n        imgLink: 'https://www.mcnutt.in/ms-zine/cover.png',\n        text: 'My masters thesis zine',\n        year: 2019\n    },\n    {\n        title: '\"How to read an academic paper\" zine',\n        link: 'https://www.mcnutt.in/paper-zine/',\n        imgLink: 'https://www.mcnutt.in/paper-zine/cover.png',\n        text: 'A non-definitive guide to paper reading.',\n        year: 2021\n    },\n    {\n        title: 'On the potential of zines as a medium for visualization',\n        link: 'https://www.mcnutt.in/zine-potential/',\n        imgLink: 'https://www.mcnutt.in/converted-images/zine-potential.jpg',\n        text: 'A zine about my paper about the potential of zines for data visualization.',\n        year: 2021\n    },\n    {\n        title: 'Bison Elysium National Park',\n        imgLink: 'https://www.mcnutt.in/converted-images/bison-eylsium-cover.jpg',\n        text: 'A brochure for a fictional national park made using MidJourney and GPT3. (print only)',\n        year: 2022\n    },\n    {\n        title: 'No Grammar to Rule Them All',\n        imgLink: 'https://www.mcnutt.in/converted-images/no-grammar-zine-cover.jpg',\n        text: 'A zine for my paper \"No Grammar to rule them all: a survey of JSON-style DSLs for Visualization\". (print only)',\n        year: 2022\n    },\n    {\n        title: 'Double Header CHI23 Zine',\n        imgLink: 'https://www.mcnutt.in/converted-images/chi23-zine-preview.jpg',\n        text: 'A two-sided zine describing my papers \"On the Design of AI-powered Code Assistants for Notebooks\" and \"A Study of Editor Features in a Creative Coding Classroom\"  (print only)',\n        year: 2023\n    },\n    {\n        title: 'Information Plus 2023 Program Zines',\n        imgLink: 'https://www.mcnutt.in/converted-images/info-plus-zines.jpg',\n        link: 'https://www.mcnutt.in/info-plus-2023-zine-content/',\n        text: 'Zines made for the information plus conference. Made in collaboration with Elsie Lee-Robbins and Jonathan Zong.',\n        year: 2023\n    }\n];\nexport default ZINES;\n","<script lang=\"ts\">\n  import markdownit from 'markdown-it';\n  const md = markdownit({\n    html: true,\n    linkify: true,\n    typographer: true\n  });\n  import {NEWS} from '../constants';\n  type NewsItem = (typeof NEWS)[0];\n  export let newsItem: NewsItem;\n</script>\n\n<div class=\"mb-2\">\n  <span class=\"italic font-bold text-right\">{newsItem.date}</span>\n  {@html md.render(newsItem.content)}\n</div>\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { PUBLICATIONS, COLLABORATOR_LINKS } from './constants';\nconst routes = new Set(['publications', 'projects', 'about', 'teaching', 'zines', 'news']);\nexport function getRoute() {\n    const locationSplit = location.href.split('/');\n    const naiveLocation = locationSplit[locationSplit.length - 1].toLowerCase();\n    if (location.href.includes('research') &&\n        naiveLocation !== 'research' &&\n        PUBLICATIONS.map((d) => d.urlTitle).includes(naiveLocation)) {\n        return 'show-page';\n    }\n    return routes.has(naiveLocation) ? naiveLocation : 'about';\n}\nexport function getShowPage() {\n    const locationSplit = location.href.split('/');\n    const naiveLocation = locationSplit[locationSplit.length - 1].toLowerCase();\n    return naiveLocation;\n}\nexport function groupBy(data, key) {\n    return data.reduce((acc, row) => {\n        acc[row[key]] = (acc[row[key]] || []).concat(row);\n        return acc;\n    }, {});\n}\nexport function addLinks(authors) {\n    return Object.entries(COLLABORATOR_LINKS).reduce((str, [key, link]) => {\n        return str.replace(key, `[${key}](${link})`);\n    }, authors.replace('Andrew McNutt', '__Andrew McNutt__'));\n}\n","<script lang=\"ts\">\n  import {slide} from 'svelte/transition';\n  import {addLinks} from '../utils';\n  import markdownit from 'markdown-it';\n  const md = markdownit({\n    html: true,\n    linkify: true,\n    typographer: true\n  });\n  import type {Publication} from '../data/publications';\n\n  export let publication: Publication;\n  let abstractOpen = false;\n  function toggleAbstract(e) {\n    e.preventDefault();\n    abstractOpen = !abstractOpen;\n  }\n  const keys = ['subtitle', 'journal', 'date'];\n  $: preppedKeys = keys.map((x) => publication[x]).filter((x) => x);\n</script>\n\n<div class=\"flex-col mb-10\">\n  <div class=\"flex flex-col md:flex-row\">\n    <!-- the regular image -->\n    <div class=\"h-full hidden md:block\">\n      <div class=\"items-start flex justify-center w-24 min-w-24 mx-6\">\n        <a href={publication.link}>\n          <img\n            alt=\"image drawn from {publication.title}\"\n            src={publication.imgLink}\n            class=\"cursor-pointer h-24 rounded-full\"\n          />\n        </a>\n      </div>\n    </div>\n\n    <!-- the normal content -->\n    <div class=\"flex-col w-full\">\n      <div class=\"info-container\">\n        <a href={publication.link} class=\"text-cyan-800 font-bold\">{publication.title}</a>\n        {#if publication.authors}\n          <span>{@html md.render(addLinks(publication.authors))}</span>\n        {/if}\n        <span>\n          {#each preppedKeys as key}\n            <span>{@html md.render(key)}</span>\n          {/each}\n        </span>\n      </div>\n\n      <div class=\"flex flex-wrap\">\n        {#each publication.links as { name, link }}<a class=\"publink text-cyan-800\" href={link}>{name}</a\n          >{/each}\n        {#if publication.abstract}\n          <div\n            class=\"publink items-center text-cyan-800 cursor-pointer flex text-sm no-underline\"\n            on:click={toggleAbstract}\n          >\n            abstract ({abstractOpen ? '-' : '+'})\n          </div>\n        {/if}\n      </div>\n    </div>\n  </div>\n  {#if abstractOpen}\n    <div class=\"text-sm abstract-content\" transition:slide>{@html md.render(publication.abstract)}</div>\n  {/if}\n  <div class=\"rounded-xl uppercase font-bold italic\" />\n</div>\n\n<style>\n  .publink::after {\n    content: '•';\n    padding: 0 3px;\n  }\n  .publink:last-child::after {\n    content: '';\n  }\n</style>\n","<script lang=\"ts\">\n  import NewsItem from './NewsItem.svelte';\n  import {NEWS, SELECTED_PUBLICATIONS} from '../constants';\n  import ABOUT from '../text-chunks/about.md';\n  import markdownit from 'markdown-it';\n  const md = markdownit({\n    html: true,\n    linkify: true,\n    typographer: true\n  });\n  import Publication from './Publication.svelte';\n\n  let news = NEWS.slice(0, 4);\n</script>\n\n<div class=\"\">\n  <div class=\"my-8 text-xl md-container\">\n    {@html md.render(ABOUT)}\n  </div>\n\n  <h2 class=\"text-2xl font-bold italic\">SELECTED PUBLICATIONS</h2>\n  <div class=\"mb-8\">Some highlights of my recent research work</div>\n  {#each SELECTED_PUBLICATIONS as pub}\n    <Publication publication={pub} />\n  {/each}\n\n  <h2 class=\"text-2xl font-bold italic mt-8 md:hidden\">NEWS</h2>\n  <div class=\"about-section md:hidden\">\n    {#each news as newsItem}\n      <NewsItem {newsItem} />\n    {/each}\n    <a href=\"/#/news\">Older News</a>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import {PROJECTS} from '../constants';\n  let selectedProjects = PROJECTS;\n  const tagCounts = PROJECTS.reduce((acc, {tags}) => {\n    tags.forEach((tag) => {\n      acc[tag] = (acc[tag] || 0) + 1;\n    });\n    return acc;\n  }, {});\n  let selectedTags = Object.keys(tagCounts).reduce((acc, row) => ({...acc, [row]: true}), {});\n\n  function filterProjects(selectedTags) {\n    selectedProjects = PROJECTS.filter(({tags}) => tags.some((tag) => selectedTags[tag]));\n  }\n  function toggleTag(tag) {\n    selectedTags[tag] = !selectedTags[tag];\n    filterProjects(selectedTags);\n  }\n  function reset() {\n    Object.keys(selectedTags).forEach((tag) => {\n      selectedTags[tag] = true;\n    });\n    filterProjects(selectedTags);\n  }\n</script>\n\n<div class=\"px-4\">\n  <p class=\"my-6\">\n    This is a small collection of things I've made for various tech, visualization, or artistic purposes. Some\n    of them are serious, some of them are fanciful. I made some of them for fun, while others are standalone\n    artifacts from academic work.\n  </p>\n  <div class=\"flex flex-wrap justify-around\">\n    {#each selectedProjects as project (project.title)}\n      <div class=\"project-block\">\n        <a href={project.link}>\n          <div class=\"img-container\"><img src={project.imgLink} alt=\"image for {project.title}\" /></div>\n        </a>\n        <h3 class=\"text-xl\">{project.title}</h3>\n        <!-- <h5>{project.dates}</h5> -->\n        <div class=\"flex justify-start items-center\">\n          {#if project.sourceLink}\n            <a href={project.sourceLink} class=\"mr-3\">\n              <img alt=\"github icon\" src=\"icons/github.svg\" class=\"gh-icon p-0 m-0 h-4\" />\n            </a>\n          {/if}\n          {#if project.link}<a href={project.link}>Live</a>{/if}\n        </div>\n        <p class=\"text-sm\">{project.text}</p>\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  img {\n    max-height: 200px;\n    max-width: 220px;\n  }\n\n  .project-block {\n    margin-bottom: 50px;\n    margin-right: 10px;\n    max-width: 220px;\n  }\n\n  .img-container {\n    align-items: center;\n    display: flex;\n    height: 200px;\n    width: 200px;\n    justify-content: center;\n  }\n</style>\n","<script lang=\"ts\">\n  import {PUBLICATIONS} from '../constants';\n  import PublicationComponent from './Publication.svelte';\n\n  type sort = 'type' | 'year' | 'paper name';\n  let currentSort: sort = 'type';\n  const sorts: sort[] = ['type', 'year', 'paper name'];\n  const typeOrder = [\n    'conference / journal articles',\n    'extended abstract / workshop papers',\n    'posters',\n    'theses / book chapters'\n  ];\n\n  export function sortPublications(currentSort: sort) {\n    if (currentSort === 'type' || currentSort === 'year') {\n      const yearOrder = Array.from(PUBLICATIONS.reduce((acc, x) => acc.add(x.year), new Set())) as string[];\n      return PUBLICATIONS.map((x) => ({...x, year: x.year})).reduce(\n        (acc, row) => {\n          acc[row[currentSort]].push({...row});\n          return acc;\n        },\n        (currentSort === 'type' ? typeOrder : yearOrder).reduce(\n          (acc, key: string) => ({...acc, [key]: []}),\n          {} as Record<string, any>\n        )\n      );\n    }\n\n    return {publications: PUBLICATIONS.sort((a, b) => a.title.localeCompare(b.title))};\n  }\n\n  $: sortedPublications = Object.entries(sortPublications(currentSort));\n  $: if (currentSort === 'year') {\n    sortedPublications = sortedPublications.sort((a, b) => Number(b[0]) - Number(a[0]));\n  }\n</script>\n\n<div>\n  <div class=\"flex w-full justify-between\">\n    {#each sorts as sort}\n      <button\n        class:font-bold={sort === currentSort}\n        class=\"text-lg p-2 border-none text-cyan-800\"\n        on:click={() => {\n          currentSort = sort;\n        }}>Sort by {sort}</button\n      >\n    {/each}\n  </div>\n</div>\n\n<div class=\"mb-16 max-w-fit\">\n  {#each sortedPublications as pubs}\n    <h2 class=\"mt-8 text-2xl font-bold\">{pubs[0].toUpperCase()}</h2>\n\n    <div class=\"flex flex-col\">\n      {#each pubs[1] as publication}\n        <PublicationComponent bind:publication />\n      {/each}\n    </div>\n  {/each}\n</div>\n","<script lang=\"ts\">\n  import {TEACHING} from '../constants';\n  import {groupBy} from '../utils';\n  const groups = groupBy(TEACHING, 'role');\n</script>\n\n<div class=\"leading-tight\">\n  {#each Object.keys(groups) as key}\n    <div class=\"mb-5\">\n      <h3 class=\"font-bold\">{key.toUpperCase()}</h3>\n      {#each groups[key] as position}\n        <div class=\"mb-1 flex\">\n          {#if position.link}\n            <a class=\"text-cyan-800\" href={position.link}>{position.title}</a>\n          {/if}\n          {#if !position.link}\n            <div>{position.title}</div>\n          {/if}\n\n          <div class=\"flex\">\n            <i>{`. ${position.fancyTitle || position.role}`}</i>\n            <span class=\"ml-1\">{position.date}</span>\n          </div>\n        </div>\n      {/each}\n    </div>\n  {/each}\n</div>\n","<script lang=\"ts\">\n  import {PUBLICATIONS} from '../constants';\n  import {getShowPage, addLinks} from '../utils';\n  import markdownit from 'markdown-it';\n  const md = markdownit({\n    html: true,\n    linkify: true,\n    typographer: true\n  });\n\n  const pubName = getShowPage();\n  const publication = PUBLICATIONS.find((d) => d.urlTitle === pubName);\n  const keys = ['subtitle', 'date', 'journal'];\n</script>\n\n<div class=\"flex-down publication\">\n  <div class=\"img-container\">\n    <img alt=\"image drawn from {publication.title}\" src={publication.imgLink} />\n  </div>\n  <div class=\"flex-down\">\n    <a href={publication.link} class=\"title\">{publication.title}</a>\n\n    {#each keys as key}\n      {#if publication[key]}<span>{publication[key]}</span>{/if}\n    {/each}\n    {#if publication.authors}\n      <span>{@html md.render(addLinks(publication.authors))}</span>\n    {/if}\n  </div>\n  <div class=\"section-subtitle\">Materials</div>\n  <div class=\"materials\">\n    <div class=\"flex\">\n      {#each publication.links as { name, link }}<a class=\"publink\" href={link}>{name}</a>{/each}\n    </div>\n  </div>\n  <div class=\"section-subtitle\">Abstract</div>\n  <div class=\"abstract\">{@html md.render(publication.abstract)}</div>\n</div>\n\n<style>\n  img {\n    cursor: pointer;\n    height: 500px;\n    max-height: 500px;\n    max-width: 500px;\n  }\n  .flex {\n    display: flex;\n  }\n\n  .flex-down {\n    display: flex;\n    flex-direction: column;\n  }\n  .publink {\n    align-items: center;\n    color: rgb(0, 100, 200);\n    cursor: pointer;\n    display: flex;\n    font-size: 13px;\n    text-decoration: none;\n  }\n  .publink::after {\n    content: '•';\n    padding: 0 3px;\n  }\n  .publink:last-child::after {\n    content: '';\n  }\n\n  .abstract {\n    font-size: 20px;\n  }\n\n  .img-container {\n    align-items: flex-start;\n    display: flex;\n    justify-content: center;\n    height: 500px;\n    margin-right: 5px;\n    /* width: 500px; */\n    width: 100%;\n  }\n  .publication {\n    max-width: 100%;\n    margin-bottom: 10px;\n  }\n\n  .section-subtitle {\n    font-weight: bolder;\n    margin-top: 20px;\n  }\n\n  .materials a {\n    font-size: 20px;\n  }\n\n  .title {\n    font-size: 30px;\n  }\n</style>\n","<script lang=\"ts\">\n  import {NEWS} from '../constants';\n  import markdownit from 'markdown-it';\n  const md = markdownit({\n    html: true,\n    linkify: true,\n    typographer: true\n  });\n  const groupedByYear = Object.entries(\n    NEWS.reduce((acc, row) => {\n      const [_, year] = row.date.split(' ');\n      acc[year] = (acc[year] || []).concat(row);\n      return acc;\n    }, {})\n  ).sort(([yearA], [yearB]) => Number(yearB) - Number(yearA));\n</script>\n\n<h1>NEWS</h1>\n{#each groupedByYear as [year, items]}\n  <h3>{year}</h3>\n  {#each items as { date, content }}\n    <div class=\"news-item\">\n      <div class=\"news-item-date\">{date}</div>\n      <div class=\"news-item-content\">\n        {@html md.render(content)}\n      </div>\n    </div>\n  {/each}\n{/each}\n\n<style>\n  .news-item {\n    display: flex;\n    margin-bottom: 10px;\n  }\n  .news-item-date {\n    /* border: thin solid red; */\n    font-style: italic;\n    font-weight: 500;\n    width: 100px;\n    min-width: 100px;\n    max-width: 100px;\n    margin-right: 8px;\n    word-spacing: 9999999px;\n    text-align: right;\n  }\n\n  @media screen and (max-width: 600px) {\n    .news-item {\n      flex-direction: column;\n    }\n    .news-item-date {\n      width: 100%;\n      min-width: 100%;\n      max-width: 100%;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import {ZINES} from '../constants';\n</script>\n\n<h1 class=\"mt-8 text-2xl font-bold\">Zines</h1>\n\n<div>\n  I think zines are super cool! They are interesting and engaging way to to tell stories, create accessible\n  lessons about obscure or complex or technical topics, or just make art. Here a bunch of zines I've made:\n\n  <div class=\"flex flex-row flex-wrap mt-8\">\n    {#each ZINES as zine}\n      <div class=\"zine-block\">\n        {#if zine.link}\n          <a href={zine.link}>\n            <div class=\"zine-img-container\">\n              <img src={zine.imgLink} alt=\"image for {zine.title}\" />\n            </div>\n          </a>\n        {:else}\n          <div class=\"zine-img-container\">\n            <img src={zine.imgLink} alt=\"image for {zine.title}\" />\n          </div>\n        {/if}\n        <h3 class=\"text-xl\">\n          {#if zine.link}\n            <a href={zine.link}>{zine.title}</a>\n          {:else}\n            <span>{zine.title}</span>\n          {/if} ({zine.year})\n        </h3>\n\n        <p class=\"text-sm\">{zine.text}</p>\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  img {\n    max-height: 200px;\n    max-width: 220px;\n  }\n\n  .zine-block {\n    margin-bottom: 50px;\n    margin-right: 10px;\n    max-width: 220px;\n  }\n\n  .zine-img-container {\n    align-items: center;\n    display: flex;\n    height: 200px;\n    width: 200px;\n    justify-content: center;\n  }\n</style>\n","<script lang=\"ts\">\n  import Header from './components/Header.svelte';\n  import MobileHeader from './components/MobileHeader.svelte';\n\n  import About from './components/About.svelte';\n  import Projects from './components/Projects.svelte';\n  import Publications from './components/Publications.svelte';\n  import Teaching from './components/Teaching.svelte';\n  import ShowPage from './components/ShowPage.svelte';\n  import News from './components/News.svelte';\n  import Zines from './components/Zines.svelte';\n  import NewsItem from './components/NewsItem.svelte';\n  import {NEWS} from './constants';\n\n  import {getRoute} from './utils';\n  let currentSection = getRoute();\n  window.onhashchange = () => {\n    currentSection = getRoute();\n  };\n  let news = NEWS.slice(0, 4);\n</script>\n\n<div class=\"h-full w-full md:justify-center flex flex-col md:flex-row leading-tight\">\n  <MobileHeader {currentSection} />\n  <div class=\"h-full flex-col items-center justify-center hidden md:flex min-w-fit w-64 static\">\n    <img\n      src=\"converted-images/headshot.jpg\"\n      alt=\"headshot of andrew mcnutt\"\n      class=\"w-52 max-w-full h-auto rounded-full\"\n    />\n    <h1 class=\"text-xl font-bold\">Andrew McNutt</h1>\n    <h3 class=\"text-xl\">PostDoc / Imminent Prof</h3>\n    <h3 class=\"text-xl\">Visualization / HCI</h3>\n    <!-- <h3 class=\"text-xl\">UChicago CS</h3> -->\n    <div class=\"flex align space-between\">\n      <a class=\"mr-2\" href=\"https://github.com/mcnuttandrew\"\n        ><img src=\"icons/github.svg\" alt=\"link to github account\" /></a\n      >\n      <a href=\"https://scholar.google.com/citations?user=AHwQg4kAAAAJ&hl=en\"\n        ><img src=\"icons/scholar.svg\" alt=\"link to scholar page\" /></a\n      >\n      <a href=\"https://vis.social/@mcnutt\" rel=\"me\" class=\"ml-2\"\n        ><img src=\"icons/mastodon.png\" alt=\"link to mastodon page\" class=\"w-8\" id=\"mastodon\" /></a\n      >\n      <a class=\"ml-2 text-xl text-cyan-800 font-bold\" href=\"./assets/cv.pdf\">CV</a>\n    </div>\n    <h2 class=\"text-2xl font-bold italic mt-8 hidden md:block text-left\">NEWS</h2>\n    <div class=\"about-section hidden md:block w-80\">\n      {#each news as newsItem}\n        <NewsItem {newsItem} />\n      {/each}\n      <a href=\"/#/news\">Older News</a>\n    </div>\n  </div>\n  <div class=\"px-4 md:w-1/2\">\n    <Header {currentSection} />\n    <div class=\"content-wrapper mb-11\">\n      {#if currentSection === 'publications'}\n        <Publications />\n      {:else if currentSection === 'show-page'}\n        <ShowPage />\n      {:else if currentSection === 'projects'}\n        <Projects />\n      {:else if currentSection === 'teaching'}\n        <Teaching />\n      {:else if currentSection === 'news'}\n        <News />\n      {:else if currentSection === 'zines'}\n        <Zines />\n      {:else}\n        <About />\n      {/if}\n    </div>\n  </div>\n</div>\n\n<style lang=\"postcss\" global>\n  @tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n\n  #mastodon {\n    margin-top: -2px;\n  }\n</style>\n","import App from './App.svelte';\nconst app = new App({ target: document.body });\nexport default app;\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","toggle_class","toggle","classList","HtmlTag","this","e","n","html","nodeName","t","h","innerHTML","Array","from","childNodes","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","rule","str","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","style","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","dirty","ctx","after_update","dispatch","direction","kind","dispatchEvent","type","detail","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","Math","abs","start","end","group","go","easing","tick","css","then","destroy_block","lookup","key","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","on_mount","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","props","parent_component","bound","context","skip_bound","ready","ret","rest","hydrate","nodes","children","l","SvelteComponent","$destroy","index","splice","$$props","obj","$$set","keys","toUpperCase","currentSection","subscriber_queue","cubicOut","is_date","prototype","toString","call","get_interpolator","isArray","Error","arr","bi","getTime","delta","interpolators","result","tweened","defaults","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","writable","target_value","opts","previous_task","started","linear","interpolate","abort","elapsed","noImage","link","rotation","open","$rotation","decodeCache","decode","string","exclude","defaultChars","cache","ch","String","fromCharCode","slice","getDecodeCache","replace","seq","b1","parseInt","b2","chr","b3","b4","componentChars","encodeCache","encode","keepEscaped","test","getEncodeCache","code","nextCode","encodeURIComponent","format","url","protocol","slashes","auth","hostname","port","pathname","search","Url","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","javascript:","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","urlParse","slashesDenoteHost","u","parse","lowerProto","hec","trim","simplePath","exec","proto","toLowerCase","substr","match","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","validParts","notHost","bit","unshift","qm","_a","Uint16Array","decodeMap","fromCodePoint","codePoint","output","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isEntityInAttributeInvalidEnd","EQUALS","UPPER_Z","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","state","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","offset","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","base","digitCount","pow","startIdx","char","addToNumericResult","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","replaceCodePoint","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","decoder","lastIndex","startEntity","len","write","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecoder","htmlDecodeTree","decodeHTML","mode","Legacy","isString","_class","xmlDecodeTree","_hasOwnProperty","hasOwnProperty","sources","arguments","source","TypeError","arrayReplaceAt","pos","newElements","isValidEntityCode","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","unescapeAll","escaped","entity","decoded","replaceEntityPattern","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","&","<",">","\"","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","isSpace","isWhiteSpace","isPunctChar","ucmicro.P","ucmicro.S","isMdAsciiPunct","normalizeReference","lib","mdurl","ucmicro","object","disableNested","level","found","marker","prevPos","posMax","oldPos","md","inline","skipToken","labelEnd","ok","prev_state","can_continue","default_rules","Renderer","rules","Ruler","__rules__","__cache__","Token","tag","nesting","attrs","content","markup","info","meta","hidden","StateCore","env","tokens","inlineMode","code_inline","idx","slf","token","renderAttrs","code_block","fence","highlighted","langName","langAttrs","highlight","attrIndex","tmpAttrs","langPrefix","tmpToken","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","html_block","html_inline","needLf","nextToken","renderInline","render","__find__","__compile__","self","chains","enabled","alt","altName","chain","at","opt","before","beforeName","ruleName","after","afterName","enable","ignoreInvalid","enableOnly","disable","getRules","chainName","attrPush","attrData","attrSet","attrGet","attrJoin","NEWLINES_RE","NULL_RE","isLinkClose","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","stack","thisLevel","OUTER","canOpen","canClose","isSingle","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","item","single","openQuote","closeQuote","quotes","_rules","tok","blockTokens","linkify","pretest","htmlLinkLevel","currentToken","links","lastPos","ln","fullUrl","normalizeLink","validateLink","urlText","schema","normalizeLinkText","token_o","token_t","token_c","blkIdx","typographer","curr","last","Core","ruler","StateBlock","bMarks","eMarks","tShift","sCount","bsCount","blkIndent","line","lineMax","tight","ddIndent","listIndent","parentType","indent","indent_found","process","State","isEmpty","skipEmptyLines","skipSpaces","skipSpacesBack","min","skipChars","skipCharsBack","getLines","begin","keepLastLF","queue","lineIndent","lineStart","getLine","escapedSplit","isEscaped","substring","skipBulletListMarker","startLine","skipOrderedListMarker","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","endLine","silent","nextLine","firstCh","secondCh","lineText","columns","aligns","shift","columnCount","oldParentType","terminatorRules","tableLines","token_ho","token_il","tbodyLines","autocompletedCells","terminate","token_tdo","mem","haveEndMarker","oldLineMax","oldBMarks","oldBSCount","oldSCount","oldTShift","lastLineEmpty","isOutdented","spaceAfterMarker","adjustTab","initial","oldIndent","lines","tokenize","cnt","isOrdered","markerValue","posAfterMarker","isTerminatingParagraph","Number","markerCharCode","listTokIdx","listLines","prevEmptyEnd","contentStart","indentAfterMarker","itemLines","oldTight","oldListIndent","markTightParagraphs","_endLine","getNextLine","isContinuation","lineContent","destRes","helpers","parseLinkDestination","href","destEndPos","destEndLineNo","title","titleRes","parseLinkTitle","label","references","tmp","token_i","ParserBlock","StateInline","outTokens","tokens_meta","pending","pendingLevel","delimiters","_prev_delimiters","backticks","backticksScanned","linkLevel","isTerminatorChar","maxNesting","hasEmptyLines","prevLine","pushPending","token_meta","scanDelims","canSplitWord","count","left_flanking","right_flanking","can_open","can_close","SCHEME_RE","ESCAPED","postProcess","loneMarkers","startDelim","endDelim","scanned","close","isStrong","EMAIL_RE","AUTOLINK_RE","DIGITAL_RE","NAMED_RE","processDelimiters","openersBottom","headerIdx","lastTokenIdx","jumps","closerIdx","closer","minOpenerIdx","openerIdx","newMinOpenerIdx","opener","isOddMatch","lastJump","matchAtStart","pmax","ws","ch1","escapedStr","ch2","origStr","openerLength","matchStart","matchEnd","closerLength","r_strikethrough","r_emphasis","res","ref","parseReference","labelStart","parseLinkLabel","lc","isLetter","_rules2","ParserInline","ruler2","isFunction","escapeRE","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","tail","re","src_auth","src_host_port_strict","src_path","//","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto:","mailto","src_email_name","src_host_strict","tlds_default","compile","src_Any","Any","src_Cc","Cc","src_Z","Z","src_P","P","src_ZPCc","src_ZCc","src_pseudo_letter","src_ip4","src_xn","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","reFactory","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","isRegExp","createValidator","normalize","alias","slist","schema_test","schema_search","schema_at_start","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","reduce","acc","definition","ml","me","tld_pos","at_pos","testSchemaAt","keepOld","sort","el","reverse","maxInt","regexPunycode","regexNonASCII","regexSeparators","overflow","not-basic","invalid-input","floor","stringFromCharCode","error","RangeError","mapDomain","domain","parts","encoded","array","ucs2decode","counter","extra","digitToBasic","digit","flag","adapt","numPoints","firstTime","baseMinusTMin","input","inputLength","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","punycode","default","components","core","zero","rules2","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","mdurl.parse","er","mdurl.encode","mdurl.format","mdurl.decode","MarkdownIt","presetName","utils.isString","ParserCore","renderer","utils","utils.assign","configure","presets","missed","use","plugin","args","apply","parseInline","NEWS","date","PROJECTS","dates","sourceLink","imgLink","tags","PUBLICATIONS","urlTitle","authors","journal","year","abstract","subtype","shortTitle","ZINES","COLLABORATOR_LINKS","Aaron Elmore","Agatha Seo-Hyun Kim","Alex M. Clark","Allison Morgan","Anamaria Crisan","Anton Outkine","Blase Ur","Chenglong Wang","Chenhao Tan","Elsie Lee-Robbins","Gordon Kindlmann","Jane L. Adams","Jeffrey Heer","Joel Franklin","Ken Gu","Kevin Bryson","Krishna Dole","Kyle Chard","Madeleine Grunde-McLaughlin","Matthias Miller","Mennatallah El-Assady","Michael Correll","Michael J. McGuffin","Michael Littman","Nelia Mann","Nicolas Kruchten","Ravi Chugh","Rob DeLine","Sara Di Bartolomeo","Sean Ekins","Steven M. Drucker","Tim Althoff","Varchas Gopalaswamy","Victor Schetinger","Will Brackenbury","Yuxin Chen","selectedPubs","SELECTED_PUBLICATIONS","TEACHING","role","location","fancyTitle","markdownit","newsItem","slide","getComputedStyle","opacity","height","parseFloat","padding_top","paddingTop","padding_bottom","paddingBottom","margin_top","marginTop","margin_bottom","marginBottom","border_top_width","borderTopWidth","border_bottom_width","borderBottomWidth","routes","getRoute","locationSplit","naiveLocation","includes","addLinks","entries","publication","abstractOpen","preppedKeys","preventDefault","selectedProjects","tagCounts","row","undefined","currentSort","typeOrder","sortPublications","yearOrder","publications","localeCompare","sortedPublications","pubName","getShowPage","find","_","yearA","yearB","onhashchange","news","body"],"mappings":"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"}